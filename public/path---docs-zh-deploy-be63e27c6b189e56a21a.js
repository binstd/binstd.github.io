webpackJsonp([0xa8c071f88b07],{879:function(t,o){t.exports={data:{currentPage:{html:'<h1>部署 Storybook</h1>\n<p>在本教程中,我们在开发机器上运行了Storybook. 您可能还想与团队分享该 Storybook,尤其是非技术成员. 值得庆幸的是,在线部署 Storybook 很容易. </p>\n<div class="aside">\n<strong>您之前是否安装过Chromatic 测试？?</strong>\n<br/>\n🎉 你的故事已经部署好了！ Chromatic 在线安全地为您的故事编制索引，并在分支和提交中跟踪它们。 跳过这一章，然后转到 <a href="/conclusion">总结</a>.\n</div>\n<h2>导出为静态应用程序</h2>\n<p>要部署Storybook,我们首先需要将其导出为 静态Web应用程序. 这个功能已经内置到 Storybook中,我们只需要通过添加脚本来激活它<code>package.json</code>. </p>\n<pre><code class="language-javascript">{\n  "scripts": {\n    "build-storybook": "build-storybook -c .storybook -o .storybook-static"\n  }\n}\n</code></pre>\n<p>现在当你运行<code>npm run build-storybook</code>,它会输出一个 静态的<code>storybook-static</code>目录. </p>\n<h2>持续部署</h2>\n<p>我们希望在推送代码时共享最新版本的组件. 为此,我们需要不断部署Storybook. 我们将依靠 GitHub和Netlify 来部署我们的静态站点. 我们正在使用 Netlify免费计划. </p>\n<h3>GitHub上</h3>\n<p>首先,您要在本地目录中为项目设置Git. 如果您从上一个测试章节开始,请跳转到在 GitHub上 设置存储库. </p>\n<pre><code class="language-bash">$ git init\n</code></pre>\n<p>接下来将文件添加到第一次提交. </p>\n<pre><code class="language-bash">$ git add .\n</code></pre>\n<p>现在提交文件. </p>\n<pre><code class="language-bash">$ git commit -m "taskbox UI"\n</code></pre>\n<p>转到GitHub并设置存储库<a href="https://github.com/new">这里</a>. 将您的仓库命名为"taskbox". </p>\n<p><img src="/github-create-taskbox.png" alt="GitHub setup"></p>\n<p>在新的repo设置中,复制repo的原始URL,并使用以下命令将其添加到git项目中: </p>\n<pre><code class="language-bash">$ git remote add origin https://github.com/&#x3C;your username>/taskbox.git\n</code></pre>\n<p>最后将回购推送到GitHub</p>\n<pre><code class="language-bash">$ git push -u origin master\n</code></pre>\n<h3>Netlify</h3>\n<p>Netlify内置了持续部署服务,使我们无需配置自己的CI,即可部署Storybook. </p>\n<div class="aside">\n如果您在公司使用CI，请在您上传的配置中添加部署脚本 <code>storybook-static</code> 到像S3这样的静态托管服务.\n</div>\n<p><a href="https://app.netlify.com/start">在Netlify上创建一个帐户</a>然后单击"创建站点". </p>\n<p><img src="/netlify-create-site.png" alt="Netlify create site"></p>\n<p>然后单击GitHub按钮将,Netlify连接到GitHub. 这允许它访问我们的远程 Taskbox 仓库. </p>\n<p>现在从选项列表中选择任务框GitHub repo. </p>\n<p><img src="/netlify-account-picker.png" alt="Netlify connect to repo"></p>\n<p>通过突出显示在其CI中运行的构建命令,以及输出静态站点的目录 来配置 Netlify. 对于分支选择 <code>master</code>. 目录是<code>storybook-static</code>. <code>yarn build-storybook</code>构建.</p>\n<p><img src="/netlify-settings.png" alt="Netlify settings"></p>\n<p>提交表单以 构建和部署代码任务箱的<code>master</code>分支. 完成后,我们将在 Netlify上 看到一条确认消息,其中包含指向 Taskbox在线 Storybook 的链接. </p>\n<p>如果您正在跟进,您部署的 Storybook应该在线<a href="https://clever-banach-415c03.netlify.com/">像这样</a>.</p>\n<p><img src="/netlify-storybook-deploy.png" alt="Netlify Storybook deploy"></p>\n<p>我们完成了 Storybook的持续部署! 现在我们可以通过链接与队友分享我们的故事. </p>\n<p>这有助于视觉 作为 标准应用程序开发过程的 一部分审查 或 仅仅是为了展示工作💅. </p>',frontmatter:{title:"发布 Storybook",description:"使用 GitHub 和 Netlify 发布 Storybook网站 ",commit:null},fields:{slug:"/docs/zh/deploy/",chapter:"deploy",framework:"docs",language:"zh"}},site:{siteMetadata:{title:"binstd-区块链云服务平台",toc:["get-started","simple-component","composite-component","data","screen","test","deploy","conclusion","contribute"],languages:["en","zh"],githubUrl:"https://github.com/hichroma/learnstorybook.com",codeGithubUrl:"https://github.com/hichroma/learnstorybook-code",siteUrl:"https://binstd.com"}},pages:{edges:[{node:{frontmatter:{tocTitle:"合成组件",title:"组装复合组件",description:"使用更简单的组件 组装复合组件"},fields:{slug:"/docs/zh/composite-component/",chapter:"composite-component"}}},{node:{frontmatter:{tocTitle:null,title:"总结",description:"把所有的知识汇总以下，学习更多的 storybook 技巧"},fields:{slug:"/docs/zh/conclusion/",chapter:"conclusion"}}},{node:{frontmatter:{tocTitle:null,title:"帮助我们",description:"帮助 我们与世界分享 Storybook "},fields:{slug:"/docs/zh/contribute/",chapter:"contribute"}}},{node:{frontmatter:{tocTitle:"Data",title:"接连data",description:"了解如何将数据连接到UI组件"},fields:{slug:"/docs/zh/data/",chapter:"data"}}},{node:{frontmatter:{tocTitle:"发布",title:"发布 Storybook",description:"使用 GitHub 和 Netlify 发布 Storybook网站 "},fields:{slug:"/docs/zh/deploy/",chapter:"deploy"}}},{node:{frontmatter:{tocTitle:"从头开始",title:"开始吧",description:"在你的开发环境下, 设置 React Storybook "},fields:{slug:"/docs/zh/get-started/",chapter:"get-started"}}},{node:{frontmatter:{tocTitle:"页面",title:"构建一个页面",description:"用组件构建一个页面"},fields:{slug:"/docs/zh/screen/",chapter:"screen"}}},{node:{frontmatter:{tocTitle:"简单 组件",title:"构建一个简单的组件",description:"单独构建一个简单的组件"},fields:{slug:"/docs/zh/simple-component/",chapter:"simple-component"}}},{node:{frontmatter:{tocTitle:null,title:"测试",description:"了解测试UI组件的方法"},fields:{slug:"/docs/zh/test/",chapter:"test"}}}]}},pathContext:{slug:"/docs/zh/deploy/",framework:"docs",language:"zh",chapter:"deploy"}}}});
//# sourceMappingURL=path---docs-zh-deploy-be63e27c6b189e56a21a.js.map