{"version":3,"sources":["webpack:///./src/lib/config.js","webpack:///./src/lib/eth.js","webpack:///./src/components/MaLayout.js","webpack:///./src/model/user_model.js","webpack:///./src/components/Mamenu.js","webpack:///./src/lib/translate.js","webpack:///./src/view/dapp/create.js","webpack:///./src/view/dapp/MyDappList.js","webpack:///./src/components/Massage.js","webpack:///./src/components/TransferCard.js","webpack:///./src/view/dapp/manage.js"],"names":["__webpack_require__","d","__webpack_exports__","server_url","console","log","eth","Eth","require","window","ethereum","HttpProvider","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_Mamenu__WEBPACK_IMPORTED_MODULE_2__","MaLayout","_ref","children","a","createElement","propTypes","PropTypes","node","isRequired","userModel","id","Math","random","uid","username","telephone","address","logintype","verifyed","auth","choossedmenu","allSet","jsonData","this","uidSet","usernameSet","telephoneSet","addressSet","logintypeSet","verifyedSet","authSet","clearAll","decorate","observable","user_model","ButtonAppBar","observer","_React$Component","props","_this","call","handleProfileMenuOpen","event","setState","anchorEl","currentTarget","handleMenuClose","handleMobileMenuClose","handleMobileMenuOpen","mobileMoreAnchorEl","handleSignMessage","publicAddress","nonce","Promise","resolve","reject","web3","personal","sign","fromUtf8","err","signature","handleAuthenticate","_ref2","fetch","body","JSON","stringify","headers","Content-Type","method","then","response","json","handleLoggedIn","userinfo","accounts","toLowerCase","state","localStorage","setItem","location","reload","handleLoggedOut","removeItem","undefined","handleSignup","network","inheritsLoose_default","_proto","prototype","componentDidMount","_this2","login","net_version","networkId","getItem","parse","_this3","enable","payToken","_this4","users","length","catch","alert","render","user_label","_this5","_this$state","classes","isMenuOpen","Boolean","isMobileMenuOpen","react_default","Button_default","color","onClick","className","sectionDesktop","navigate","IconButton_default","aria-owns","aria-haspopup","AccountCircle_default","sectionMobile","MoreVert_default","networkName","renderMenu","Menu_default","anchorOrigin","vertical","horizontal","transformOrigin","open","onClose","MenuItem_default","renderMobileMenu","networkColor","colorMain","colorRopsten","colorRinkeby","colorKovan","viewNetwork","Lens_default","style","fontSize","marginRight","root","AppBar_default","position","appBar","Toolbar_default","menuButton","aria-label","src","height","width","margin","Typography_default","variant","grow","React","Component","object","withStyles","theme","_sectionDesktop","_sectionMobile","zIndex","drawer","flexGrow","marginLeft","display","breakpoints","up","transFunc","transInput","funcName","value","inputName","inputs","DappCreate","SetInput","name","deploydata","target","delpoyContract","argument","Object","values","SimpleStore","contract","abi","bytecode","from","gas","new","apply","concat","error","result","postDapp","txhash","postData","dappName","txHash","contractInfo","dappChain","data","inputlist","transferJson","res","code","_iterator","_isArray","Array","isArray","_i","Symbol","iterator","next","done","itemapi","type","_iterator2","_isArray2","_i2","translate","e","contractview","map","index","react__WEBPACK_IMPORTED_MODULE_7___default","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_13___default","key","item","xs","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_15___default","required","label","onChange","bind","fullWidth","autoComplete","minHeight","_material_ui_core_Paper__WEBPACK_IMPORTED_MODULE_19___default","paper","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_14___default","gutterBottom","container","spacing","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_16___default","submit","maxWidth","marginTop","unit","flexDirection","alignItems","padding","avatar","backgroundColor","palette","secondary","main","form","DappList","dapplist","contractAddress","react__WEBPACK_IMPORTED_MODULE_1___default","_material_ui_core_Paper__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_7___default","_material_ui_core_ButtonBase__WEBPACK_IMPORTED_MODULE_9___default","image","img","alt","sm","direction","wordWrap","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_8___default","href","rel","maxwidth","maxheight","maxHeight","MediaControlCard","setMessage","messageText","messageIsOpen","Snackbar_default","autoHideDuration","ContentProps","aria-describedby","message","action","size","close","Close_default","createData","calories","fat","carbs","protein","rows","TransferCard","Paper_default","Grid_default","Table_default","table","TableHead_default","TableRow_default","TableCell_default","numeric","TableBody_default","row","component","scope","handleClickOpen","contractabi","at","toString","todoFunctionAbi","handleClose","isOpen","delpoyContractt","askapi","writeapi","contractName","constant","push","TextField_default","Drawer_default","drawerPaper","toolbar","List_default","ListItem_default","button","ListItemText_default","primary","Divider_default","content","paragraph","components_TransferCard","Dialog_default","dialog","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","DialogActions_default","Massage","flexShrink","mixins","minWidth"],"mappings":"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","file":"2-47efbacabb19424af602.js","sourcesContent":["// export const server_url = 'https://api.binstd.com';\nlet server_url = 'https://api.binstd.com';\nif (process.env.NODE_ENV === 'production') {\n    server_url = 'https://api.binstd.com';\n} else {\n    server_url = 'http://127.0.0.1:3000';\n}\n\nconsole.log('server_url:',server_url);\nexport {server_url};\n","const Eth = require('ethjs');\n\n\nvar eth; \n\nif (typeof window !== `undefined`) {\n    // import Web3 from 'web3';\n    eth  = new Eth(window.ethereum || new Eth.HttpProvider('https://ropsten.infura.io/v3/0045c2ce288a4e649a8f39f3d19446b4'));  \n}\n\nexport {eth,Eth}\n\n\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n\nimport Mamenu from './Mamenu';\n\n// const theme = createMuiTheme({\n//     typography: {\n//         useNextVariants: true,\n//     },\n//     palette: {\n//       primary: {\n//         light: '#2196f3',\n//         main: '#2196f3',\n//         dark: '#2196f3',\n//         contrastText: '#fff',\n//       },\n//       secondary: {\n//         light: '#ff7961',\n//         main: '#f44336',\n//         dark: '#ba000d',\n//         contrastText: '#000',\n//       },\n//     },\n//     shadows: Array(25).fill('none')\n// });\n\nconst MaLayout = ({ children }) => (\n    <div>\n          <Mamenu/>\n         {children} \n    </div>\n    // <React.Fragment>\n    //     <CssBaseline /> \n    //     <MuiThemeProvider theme={theme}>\n    //         <Mamenu/>\n    //         {children}\n    //      </MuiThemeProvider>\n    // </React.Fragment>\n)\n\nMaLayout.propTypes = {\n  children: PropTypes.node.isRequired\n}\n\nexport default MaLayout\n\n","import { decorate, observable, action, computed } from \"mobx\";\n\nclass userModel {\n    id = Math.random();\n    uid;\n    username;\n    telephone;\n    address;\n    logintype;\n    verifyed;\n    auth;\n    choossedmenu;\n\n    get getAllData() {\n        const data = {\n            uid: this.uid,\n            username: this.username,\n            telephone: this.telephone,\n            address: this.address,\n            verifyed:this.verifyed,\n            logintype:this.logintype,\n            auth:this.auth\n        };\n        return data;\n    }\n\n    allSet(jsonData) {\n        if (jsonData['uid']) {\n            this.uid = jsonData['uid'];\n        }\n\n        if (jsonData['username']) {\n            // console.log(jsonData['username']);\n            this.username = jsonData['username'];\n        }\n\n        if (jsonData['telephone']) {\n            this.telephone = jsonData['telephone'];\n        }\n\n        if (jsonData['address']) {\n            this.address = jsonData['address'];\n        }\n\n        if (jsonData['verifyed']) {\n            this.verifyed = jsonData['verifyed'];\n        }\n\n        if (jsonData['logintype']) {\n            this.logintype = jsonData['logintype'];\n        }\n\n        if (jsonData['auth']) {\n            this.auth = jsonData['auth'];\n        } \n\n    }\n\n    uidSet(uid) {\n        this.uid = uid;\n    }\n\n    usernameSet(username) {\n        this.username = username;\n    }\n\n    telephoneSet(telephone) {\n        this.telephone = telephone;\n    }\n\n    addressSet(address) {\n        this.address = address;\n    }\n\n    logintypeSet(logintype) {\n        this.logintype = logintype;\n    }\n\n    verifyedSet(verifyed) {\n        this.verifyed = verifyed;\n    }\n\n    authSet(auth) {\n        this.auth = auth;\n    }\n\n    clearAll() {\n        this.uid = '';\n        this.username = '';\n        this.telephone = '';\n        this.address = '';\n        this.logintype = '';\n        this.verifyed =  '';\n        this.auth = '';\n    }\n}\n\ndecorate(userModel, {\n    uid: observable,\n    username: observable,\n    telephone: observable,\n    address: observable,\n    verifyed:observable,\n    logintype:observable,\n    auth:observable,\n    choossedmenu:observable\n});\n\nexport default new userModel();","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport { navigate } from \"@reach/router\";\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport LensIcon from '@material-ui/icons/Lens';\n\nimport { eth } from '../lib/eth';\n\nimport user_model from '../model/user_model';\nimport { observer } from 'mobx-react';\nimport { server_url } from '../lib/config';\n\nconst styles = theme => ({\n\n  root: {\n    width: '100%',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },  \n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n  colorMain: {\n      color:'#1abc9c'\n  },\n  colorRopsten:{\n    color:'#FF3E96'\n  },\n  colorRinkeby:{\n    color:'#FFD700'\n  },\n  colorKovan:{\n    color:'#690496'\n  }\n})\n\n\nconst ButtonAppBar = observer(class ButtonAppBar extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n          userinfo:{},\n          anchorEl: null,\n          mobileMoreAnchorEl: null,\n          network:'',\n          address:''\n        }\n    }\n    handleProfileMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n    \n    handleMenuClose = () => {\n    this.setState({ anchorEl: null });\n    this.handleMobileMenuClose();\n    };\n    \n    handleMobileMenuOpen = event => {\n    this.setState({ mobileMoreAnchorEl: event.currentTarget });\n    };\n\n    handleMobileMenuClose = () => {\n    this.setState({ mobileMoreAnchorEl: null });\n    };\n    \n    componentDidMount(){\n        // Reactotron.log('hello rendering world')\n        if(typeof window.ethereum !== `undefined`) {\n            this.login();\n            eth.net_version().then((networkId) => {\n                this.setState({\n                    networkId\n                });\n            }); \n\n            // window.ethereum.on('networkChanged',  (networkId) => {\n            //   this.setState({\n            //       networkId\n            //   });\n            // });\n\n            if (localStorage.getItem(\"userinfo\")) {\n                let userinfo = JSON.parse(localStorage.getItem(\"userinfo\"));\n                 this.setState({\n                    userinfo,\n                 });\n            }\n        }\n       \n    }\n\n    //新登陆\n    login() {\n        if (typeof window.ethereum !== 'undefined') { /* deal with it */ \n            window.ethereum.enable().then( (accounts) => {\n                console.log(accounts[0]);\n\n                this.setState({\n                    address: accounts[0]\n                }); \n            })\n        }\n    \n    }  \n\n  \n    //陇余代码\n    payToken() {\n        if(!user_model.address&&!user_model.logintype){\n            console.log('没有登录');\n        }\n        // Reactotron.log('==payToke==');\n        if (typeof window.ethereum !== 'undefined') { \n            // Reactotron.log('typeof window.ethereum !== undefined');\n            window.ethereum.enable().then( (accounts) => {\n                const publicAddress = accounts[0];\n                // window.alert(publicAddress);\n                fetch(\n                    `${server_url}/api/users?publicAddress=${publicAddress}`\n                ).then( response => response.json() ).then (\n                    users => (users.length ? users[0] : this.handleSignup(publicAddress))\n                ).then(this.handleSignMessage)\n                .then(this.handleAuthenticate)\n                .then(this.handleLoggedIn).catch(err => {\n                    window.alert(err);\n                });\n            })\n        }\n     \n    }\n\n    // web3登录\n    handleSignMessage = ({ publicAddress, nonce, id }) => {\n        this.setState({ \n            id\n        });\n\n        return new Promise((resolve, reject) =>\n            window.web3.personal.sign(\n                window.web3.fromUtf8(`I am signing: ${nonce}`),\n                publicAddress,\n                (err, signature) => {\n                    if (err) return reject(err);\n                    console.log('\\n signature:', signature);\n                    return resolve({ publicAddress, signature });\n                }\n            )\n        );\n    };\n\n    // 获取权限\n    handleAuthenticate = ({ publicAddress, signature }) =>\n        fetch(`${server_url}/api/auth`, {\n            body: JSON.stringify({ publicAddress, signature }),\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            method: 'POST'\n    }).then(response => response.json());\n\n    //登录\n    handleLoggedIn = auth => {\n        let userinfo  = {\n            logintype: 'ETH',\n            address: window.web3.eth.accounts[0].toLowerCase(),\n            auth: auth,\n            id:this.state.id\n        };\n        \n        user_model.allSet(userinfo);\n        localStorage.setItem(\"userinfo\", JSON.stringify(userinfo));\n        console.log(user_model.logintype);\n        this.setState({ auth });\n        window.location.reload(true); \n    };\n    \n    // 退出登录\n    handleLoggedOut = () => {\n        localStorage.removeItem('userinfo');\n        localStorage.removeItem('userdapp');\n        user_model.clearAll();\n        this.setState({ auth: undefined });\n        window.location.reload(true); \n        \n    };\n\n    //提交新地址\n    handleSignup = publicAddress =>\n        fetch(`${server_url}/api/users`, {\n            body: JSON.stringify({ publicAddress }),\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            method: 'POST'\n    }).then(response => response.json());\n\n    render() {\n        // const { classes } = this.props;\n        const { userinfo, anchorEl, mobileMoreAnchorEl,networkId} = this.state;\n        const { classes } = this.props;\n        const isMenuOpen = Boolean(anchorEl);\n        const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n        let user_label;\n\n        //未登陆\n        if (JSON.stringify(userinfo) === '{}') {\n            user_label = <Button color=\"inherit\"  onClick={() => this.payToken()} > 登陆 </Button>          \n        } else {\n            //已登陆\n            user_label =  \n            <div>\n            {/* <Button color=\"inherit\"  onClick={() => navigate(`/dapp/${userinfo.address}`)} > dapp </Button> */}\n            <div className={classes.sectionDesktop} >\n                <Button color=\"inherit\"  onClick={() => navigate(`/dapp/${userinfo.address}`)} > dapp </Button>\n                <IconButton\n                aria-owns={isMenuOpen ? 'material-appbar' : undefined}\n                aria-haspopup=\"true\"\n                onClick={this.handleProfileMenuOpen}\n                color=\"inherit\"\n                \n                >\n                  <AccountCircle />\n                </IconButton>\n            </div>\n            <div className={classes.sectionMobile}>\n                <IconButton aria-haspopup=\"true\" onClick={this.handleMobileMenuOpen} color=\"inherit\">\n                    <MoreIcon />\n                </IconButton>\n            </div>\n            </div>\n        }\n\n        const renderMenu = (\n            <Menu\n              anchorEl={anchorEl}\n              anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n              transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n              open={isMenuOpen}\n              onClose={this.handleMenuClose}\n            >\n              <MenuItem onClick={() => navigate(`/userinfo`)} >个人中心</MenuItem>\n              <MenuItem onClick={() => this.handleLoggedOut()} >退出</MenuItem>\n              {/* <Button color=\"inherit\"  > 退出 </Button> */}\n            </Menu>\n          );\n      \n          const renderMobileMenu = (\n            <Menu\n              anchorEl={mobileMoreAnchorEl}\n              anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n              transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n              open={isMobileMenuOpen}\n              onClose={this.handleMobileMenuClose}\n            >\n\n              <MenuItem  onClick={() => navigate(`/userinfo`)} >\n                <p>个人中心</p>\n              </MenuItem>\n              <MenuItem   onClick={() => navigate(`/dapp/${userinfo.address}`)}  >\n                <p>我的Dapp</p>\n              </MenuItem>\n             \n              <MenuItem onClick={() => this.handleLoggedOut()}>\n              \n                <p>退出</p>\n              </MenuItem>\n            </Menu>\n          );\n          let networkName,networkColor = ''\n          switch (networkId) {\n            case \"1\":\n                networkColor = classes.colorMain;\n                networkName = 'main'\n                break\n            case \"2\":\n                networkColor = '';\n                networkName = 'morden'\n                break\n            case \"3\":\n                networkColor = classes.colorRopsten;\n                networkName = 'ropsten'\n                break\n            case \"4\":\n                networkColor = classes.colorRinkeby;\n                networkName = 'rinkeby'\n                break\n            case \"42\":\n                networkColor = classes.colorKovan;\n                networkName = 'kovan'\n                break\n            default:\n                networkName = ' '\n        }\n        const viewNetwork = (\n            <div>\n             <Button color=\"inherit\"  onClick={() => this.login()} > \n                <LensIcon className={networkColor}  style= {{ fontSize: 15, marginRight:'5px' }} /> {networkName} \n             </Button>  \n           \n            </div>    \n        ); \n\n        return (\n            <div className={classes.root}>\n                <AppBar position=\"fixed\"  className={classes.appBar} >\n                    <Toolbar>\n                        <div className={classes.sectionDesktop} >\n                        <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n                            <img\n                                src='https://programmerinnfile.b0.upaiyun.com/community/10001/20180814/yzdXjjAI4g.png'\n                                style={{ height: 30, width: 108, margin: '0 35px 5px 0' }}\n                            />\n                        </IconButton>\n                        </div>\n                        <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n                            <Button color=\"inherit\"  onClick={() => navigate(`https://www.binstd.com/`)} >官网</Button>\n                            <Button color=\"inherit\"  onClick={() => navigate(`/`)} >Dapp部署</Button>\n                            <Button color=\"inherit\"  onClick={() => navigate(`/docs/getting-started/info`)} >API</Button>\n                        </Typography>\n                        <div className={classes.sectionDesktop} >\n                        {viewNetwork}\n                        </div>\n                        {user_label}\n                    </Toolbar>\n\n                    {renderMenu}\n                    {renderMobileMenu}\n                </AppBar>\n            \n             </div>\n        )\n    }\n});\n\n\n\nButtonAppBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ButtonAppBar);\n","var transFunc  = (jsonData, funcName) => {\n    if(jsonData[funcName]){\n        console.log('jsonData[name].value',jsonData[funcName].value);\n        return jsonData[funcName].value;\n    } else {\n        return funcName;\n    }\n}\n\nvar transInput  = (jsonData, funcName, inputName) => {\n    console.log(jsonData,funcName, inputName);\n    if(!jsonData[funcName]){\n        return inputName;\n    }\n    if(!jsonData[funcName].inputs) {\n        return inputName;\n    } else if (jsonData[funcName].inputs[inputName]) {\n        return jsonData[funcName].inputs[inputName];\n    } else {\n        return inputName;\n    }\n    \n    \n}\n\nexport {transFunc,transInput}","import React from 'react'\nimport { server_url } from '../../lib/config';\nimport fetch from 'node-fetch';\nimport { navigate } from \"@reach/router\";\nimport { eth } from '../../lib/eth';\nimport { transInput } from '../../lib/translate';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\n\nimport Button from '@material-ui/core/Button';\n\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport Paper from '@material-ui/core/Paper';\n\nconst styles = theme => ({\n\n    paper: {\n        maxWidth: '550px',\n        margin: 'auto',\n        marginTop: theme.spacing.unit * 12,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: `${theme.spacing.unit * 5}px ${theme.spacing.unit * 5}px ${theme.spacing.unit * 3}px`,\n    },\n    avatar: {\n        margin: theme.spacing.unit,\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing.unit,\n    },\n    submit: {\n        marginTop: theme.spacing.unit * 3,\n    },\n});\n\nclass DappCreate extends React.Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            contract: {},\n            inputlist: [],\n            deploydata: {},\n            userinfo: {},\n            network:'',\n            transferJson:{}\n\n        }\n    }\n\n    componentDidMount() {\n        var network = '';\n       // console.log('1111');\n        eth.net_version().then((result) => {\n            switch (result) {\n                case \"1\":\n                    console.log('This is mainnet')\n                    network = 'eth_main'\n                    break\n                case \"2\":\n                    console.log('This is the deprecated Morden test network.')\n                    network = 'eth_morden'\n                    break\n                case \"3\":\n                    console.log('This is the ropsten test network.')\n                    network = 'eth_ropsten'\n                    break\n                case \"4\":\n                    console.log('This is the Rinkeby test network.')\n                    network = 'eth_rinkeby'\n                    break\n                case \"42\":\n                    console.log('This is the Kovan test network.')\n                    network = 'eth_kovan'\n                    break\n                default:\n                    console.log('This is an unknown network.')\n                    network = 'eth_unknown'\n            }\n            this.setState({\n                network\n            });\n        })\n\n        if (localStorage.getItem(\"userinfo\")) {\n            let userinfo = JSON.parse(localStorage.getItem(\"userinfo\"));\n             this.setState({\n                userinfo\n             });\n        }\n        fetch(`${server_url}/api/chain/abi?apiname=${this.props.name}`).then(res => res.json()).then(result => {\n            // console.log(data);\n            // console.log(result.data);\n            let deploydata = {};\n            if (result.code === 0) {\n                let inputlist = [];\n                //console.log(result);\n                for (let itemapi of result.data.abi) {\n                    if (itemapi.type === 'constructor') {\n                        inputlist = itemapi.inputs;\n                    }\n                }\n                for (let data of inputlist) {\n                    deploydata[data.name] = '';\n                }\n                this.setState({\n                    contract: result.data,\n                    transferJson:result.data.translate,\n                    inputlist,\n                    deploydata\n                });\n            }\n        }).catch(function (e) {\n            console.log(\"失败\");\n        });\n       \n    }\n\n    SetInput = (name, event) => {\n        //console.log(event.target.value);\n       // console.log(name);\n        let deploydata = this.state.deploydata;\n        deploydata[name] = event.target.value;\n        this.setState({\n            deploydata\n        });\n\n    }\n\n    delpoyContract = () => {\n        let argument = Object.values(this.state.deploydata)\n        // var myContract = new web3.eth.Contract(this.state.contract.abi);\n        window.ethereum.enable().then( (accounts) => {\n            console.log(accounts);\n        })\n\n       console.log(this.state.deploydata);\n        eth.accounts().then((accounts) => {\n            const SimpleStore = eth.contract(this.state.contract.abi, this.state.contract.bytecode, {\n              from: accounts[0],\n              gas: 4000000,\n            });\n          \n            // create a new contract\n            SimpleStore.new(...argument,(error, result) => {\n                //console.log('error:',error);\n                if(!error){\n                    this.postDapp(result);\n                }\n            });\n        });\n  \n    }\n\n\n    postDapp = (txhash) => {\n        \n        let postData = {\n            dappName: '',\n            txHash: txhash,\n            contractInfo: this.props.name,\n            publicAddress: this.state.userinfo.address,\n            dappChain: this.state.network //不应该写死\n        }\n        console.log(postData);\n        fetch(`${server_url}/api/dapp`, {\n            body: JSON.stringify(postData),\n            headers: {\n                // Authorization: `Bearer ${auth}`,\n                'Content-Type': 'application/json'\n            },\n            method: 'POST'\n        }).then(response => response.json()).then(data => {\n            if (data.id) {\n                // navigateTo('/dapp/index')\n                navigate(`/dapp/deployed/${txhash}`);\n            }\n        })\n    }\n\n    render() {\n        let { inputlist,transferJson } = this.state;\n        const { classes } = this.props;\n       // console.log(inputlist);\n        const contractview = inputlist.map((data, index) => {\n            const { name } = data;\n                return (\n                    <Grid key={index}   item xs={12}>\n                        <TextField\n                            required\n                            id=\"address1\"\n                            name={name}\n                            // label={name}\n                            label={transInput(transferJson,'constructor', name)}\n                            onChange={this.SetInput.bind(this,name)}\n                            fullWidth\n                            autoComplete=\"billing address-line1\"\n                        />\n                    </Grid>\n                );\n        });   \n        return (\n            <div style={{ minHeight: '600px' }}>\n                <Paper className={classes.paper}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        合约部署\n                    </Typography>\n                    <Grid container spacing={24}>\n                        {contractview}\n                    </Grid>\n\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={() => this.delpoyContract()}\n                    >\n                        确认\n                    </Button>\n                </Paper>\n            </div>\n        );\n    }\n}\n\nDappCreate.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(DappCreate);\n\n\n\n","import React from 'react';\nimport fetch from 'node-fetch';\nimport { server_url } from '../../lib/config';\n\n\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport ButtonBase from '@material-ui/core/ButtonBase';\n\n\nimport { navigate } from \"@reach/router\";\nconst styles = theme => ({\n\n    root: {\n        // flexGrow: 1,\n        marginTop:10\n      },\n      paper: {\n        padding: theme.spacing.unit * 2,\n        margin: 'auto',\n        maxWidth: 660,\n        height:140,\n      },\n      image: {\n        maxwidth: '80px',\n        maxheight: '80px',\n      },\n      img: {\n        margin: 'auto',\n        display: 'block',\n        maxWidth: '80px',\n        maxHeight: '80px',\n      },\n  \n});\n\nclass DappList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            dapplist: []\n        }\n    }\n\n    componentDidMount() {\n        fetch(`${server_url}/api/dapp/${this.props.address}?chain=eth_ropsten`).then(res => res.json()).then(result => {\n            console.log(result);\n            this.setState({\n                dapplist: result\n            });\n\n        }).catch(function (e) {\n            console.log(\"失败\");\n        });\n    }\n\n    render() {\n        const { dapplist } = this.state;\n        const { classes } = this.props;\n        const contractview = dapplist.map((data, index) => {\n            console.log(data);\n            const { contractInfo, txHash,contractAddress } = data;\n            return (\n                <div  key={index} className={classes.root}>\n                    <Paper className={classes.paper}>\n                        <Grid container spacing={24}>\n                            <Grid item>\n                                <ButtonBase className={classes.image}  onClick={() => navigate(`/dapp/manage/${contractInfo}/${contractAddress}`)} >\n                                    <img className={classes.img} alt=\"complex\" src=\"https://smartz.io/static/img/erc-20.png\" />\n                                </ButtonBase>\n                            </Grid>\n                            <Grid item xs={8} sm container>\n                                <Grid item xs container direction=\"column\" >\n                                    <Grid item xs style={{maxWidth:'500px',wordWrap: 'break-word'}} >\n                                        <Typography gutterBottom variant=\"subtitle1\">\n                                            {contractInfo}\n                                         </Typography>\n                                              合约地址:\n                                            <Typography color=\"textSecondary\"  >   \n                                                <a href=\"http://localhost:8000\" color=\"textSecondary\"  target=\"_blank\"  rel=\"noopener noreferrer\" >\n                                                {txHash} \n                                                </a>\n                                            </Typography>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                    \n                </div>\n             \n            );\n        });\n\n        return (\n            <div style={{ minHeight: '600px',marginTop:'80px' }} >\n                {contractview}\n            </div >\n        )\n    }\n}\n\nDappList.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(DappList);\n\n\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst styles = theme => ({\n  close: {\n    padding: theme.spacing.unit / 2,\n  },\n});\n\n// class SimpleSnackbar extends React.Component {\n \n//     constructor(props) {\n//         super(props);\n//     }\n//     render() {\n//     const { classes } = this.props;\n//     return (\n//       <div>\n//         <Snackbar\n//           anchorOrigin={{\n//             vertical: 'bottom',\n//             horizontal: 'center',\n//           }}\n//           open={this.props.messageIsOpen}\n//           autoHideDuration={6000}\n//           onClose={() => this.props.setMessage(false)}\n//           ContentProps={{\n//             'aria-describedby': 'message-id',\n//           }}\n//           message={<span id=\"message-id\">{this.props.messageText}</span>}\n//           action={[\n//             <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={() => this.props.setMessage(false)}>\n//               已读\n//             </Button>,\n//             <IconButton\n//               key=\"close\"\n//               aria-label=\"Close\"\n//               color=\"inherit\"\n//               className={classes.close}\n//             //   onClick={this.handleClose}\n//               onClick={() => this.props.setMessage(false)}\n//             >\n//               <CloseIcon />\n//             </IconButton>,\n//           ]}\n//         />\n//       </div>\n//     );\n//   }\n// }\n\n// SimpleSnackbar.propTypes = {\n//   classes: PropTypes.object.isRequired,\n// };\n\n// export default withStyles(styles)(SimpleSnackbar);\n\n\nfunction MediaControlCard(props) {\n  const { classes, setMessage, messageText, messageIsOpen } = props;\n\n  return (\n    <div>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n          }}\n          open={messageIsOpen}\n          autoHideDuration={6000}\n          onClose={() => setMessage(false)}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">{messageText}</span>}\n          action={[\n            <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={() =>  setMessage(false)}>\n              已读\n            </Button>,\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"inherit\"\n              className={classes.close}\n              onClick={() => setMessage(false)}\n            >\n              <CloseIcon />\n            </IconButton>,\n          ]}\n        />\n      </div>\n  );\n}\n\nMediaControlCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(MediaControlCard);\n","import React from 'react';\nimport fetch from 'node-fetch';\nimport { server_url } from '../lib/config';\n\n\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst styles = theme => ({\n    \n    root: {\n        // flexGrow: 1,\n        marginTop: 10\n    },\n    paper: {\n        padding: theme.spacing.unit * 2,\n        margin: 'auto',\n        maxWidth: 600,\n        // height: 140,\n    },\n    image: {\n        width: '100px',\n        height: '100px',\n    },\n    img: {\n        margin: 'auto',\n        display: 'block',\n        maxWidth: '80px',\n        maxHeight: '80px',\n    },\n    table: {\n        width: \"90%\",\n        margin:'5px auto'\n    },\n\n});\n\nlet id = 0;\nfunction createData(name, calories, fat, carbs, protein) {\n    id += 1;\n    return { id, name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    // createData('Eclair', 262, 16.0, 24, 6.0),\n    // createData('Cupcake', 305, 3.7, 67, 4.3),\n    // createData('Gingerbread', 356, 16.0, 49, 3.9),\n];\n\nclass TransferCard extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            dapplist: []\n        }\n    }\n\n    componentDidMount() {\n        fetch(`${server_url}/api/dapp/${this.props.address}?chain=eth_ropsten`).then(res => res.json()).then(result => {\n            console.log(result);\n            this.setState({\n                dapplist: result\n            });\n            // let deploydata = {};\n        }).catch(function (e) {\n            console.log(\"失败\");\n        });\n    }\n\n    render() {\n        // const { dapplist } = this.state;\n        const { classes } = this.props;\n        // const contractview = dapplist.map((data, index) => {\n        //     console.log(data);\n        //     const { contractInfo, txHash, contractAddress } = data;\n        //     return (\n        //         <div key={index} className={classes.root}>\n        //             <Paper className={classes.paper}>\n        //                 <Grid container spacing={24}>\n        //                     <Grid item>\n        //                         <ButtonBase className={classes.image} onClick={() => navigate(`/dapp/manage/${contractInfo}/${contractAddress}`)} >\n        //                             <img className={classes.img} alt=\"complex\" src=\"https://smartz.io/static/img/erc-20.png\" />\n        //                         </ButtonBase>\n        //                     </Grid>\n        //                     <Grid item xs={8} sm container>\n        //                         <Grid item xs container direction=\"column\" >\n        //                             <Grid item xs style={{ maxWidth: '400px' }} >\n        //                                 <Typography gutterBottom variant=\"subtitle1\">\n        //                                     {contractInfo}\n        //                                 </Typography>\n        //                                 合约地址:\n        //                                     <Typography color=\"textSecondary\"  >\n        //                                     <a href=\"http://localhost:8000\" color=\"textSecondary\" target=\"_blank\" >\n        //                                         {txHash}\n        //                                     </a>\n        //                                 </Typography>\n        //                             </Grid>\n        //                         </Grid>\n        //                     </Grid>\n        //                 </Grid>\n        //             </Paper>\n\n        //         </div>\n\n        //     );\n        // });\n\n        return (\n            <div style={{ minHeight: '600px', marginTop: '10px' }} >\n                <div className={classes.root}>\n                    <Paper className={classes.paper}>\n                        <Grid container spacing={24}>\n                           \n                            <Grid item xs={8} sm container>\n                                <Grid item xs container direction=\"column\" >\n                                    <Grid item xs style={{ maxWidth: '400px' }} >\n                                        <Typography gutterBottom variant=\"subtitle1\">\n                                            我是合约11\n                                         </Typography>\n                                            合约地址:\n    \n                                            <Typography color=\"textSecondary\">\n                                                <a href=\"http://localhost:8000\"  color=\"textSecondary\" target=\"_blank\"  rel=\"noopener noreferrer\" >\n                                                    luz243434343\n                                                </a>\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </div>\n\n                <div className={classes.root}>\n                    <Paper className={classes.paper}>\n                        <Grid container spacing={24}>\n                          \n                            <Grid item xs={8} sm container>\n                                <Grid item xs container direction=\"column\" >\n                                    <Grid item xs style={{}} >\n                                        <Typography gutterBottom variant=\"subtitle1\">\n                                            方法名称: 转账\n                                         </Typography>\n                                                hashhashhashhashhashhashhashhash\n                                            {/* <Typography color=\"textSecondary\"  > */}\n                                                输入:\n                                                <Table className={classes.table}>\n                                                    <TableHead>\n                                                        <TableRow>\n                                                            <TableCell>参数名</TableCell>\n                                                            <TableCell numeric>值</TableCell>\n                                                            \n                                                        </TableRow>\n                                                    </TableHead>\n                                                    <TableBody>\n                                                        {rows.map(row => {\n                                                            return (\n                                                                <TableRow key={row.id}>\n                                                                    <TableCell component=\"th\" scope=\"row\">\n                                                                        {row.name}\n                                                                    </TableCell>\n                                                                    <TableCell numeric>{row.calories}</TableCell>\n                                                                </TableRow>\n                                                            );\n                                                        })}\n                                                    </TableBody>\n                                                </Table>\n                                           {/* </Typography> */}\n                                            {/* <Typography color=\"textSecondary\"  style={{marginTop:'30px'}}> */}\n                                               结果:\n                                                <Table className={classes.table}>\n                                                    <TableHead>\n                                                        <TableRow>\n                                                            <TableCell>参数名</TableCell>\n                                                            <TableCell numeric>值</TableCell>\n                                                            \n                                                        </TableRow>\n                                                    </TableHead>\n                                                    <TableBody>\n                                                        {rows.map(row => {\n                                                            return (\n                                                                <TableRow key={row.id}>\n                                                                    <TableCell component=\"th\" scope=\"row\">\n                                                                        {row.name}\n                                                                    </TableCell>\n                                                                    <TableCell numeric>{row.calories}</TableCell>\n                                                                </TableRow>\n                                                            );\n                                                        })}\n                                                    </TableBody>\n                                                </Table>\n                                           {/* </Typography> */}\n\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </div>\n\n            </div >\n        )\n    }\n}\n\nTransferCard.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(TransferCard);\n\n\n\n\n\n","import React from 'react'\nimport { server_url } from '../../lib/config';\nimport { transFunc,transInput } from '../../lib/translate';\nimport fetch from 'node-fetch';\nimport { navigate } from \"@reach/router\";\n//import { web3 } from '../../lib/eth';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\n\nimport Button from '@material-ui/core/Button';\n\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\n\nimport Drawer from '@material-ui/core/Drawer';\n\nimport List from '@material-ui/core/List';\n// import Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\n\nimport ListItemText from '@material-ui/core/ListItemText';\n\n// import Mamenu from '../../components/Mamenu';\nimport Massage from '../../components/Massage';\n\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TransferCard from '../../components/TransferCard';\n\nimport { eth } from '../../lib/eth';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n    paper: {\n        maxWidth: '550px',\n        margin: 'auto',\n        marginTop: theme.spacing.unit * 12,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: `${theme.spacing.unit * 5}px ${theme.spacing.unit * 5}px ${theme.spacing.unit * 3}px`,\n    },\n    avatar: {\n        margin: theme.spacing.unit,\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing.unit,\n    },\n    submit: {\n        marginTop: theme.spacing.unit * 3,\n    },\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing.unit * 3,\n    },\n    toolbar: theme.mixins.toolbar,\n    dialog:{\n        minWidth:'600px',\n        margin:'auto'\n    }\n});\n\n\nclass DappCreate extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false, //弹出输入开发\n            messageIsOpen:false, //弹出消息开关\n            messageText:'', //弹出消息开关\n            contractabi: [], //全部abi\n            inputlist: [],\n            deploydata: {},\n            askapi:[],\n            writeapi:[],\n            todoFunctionAbi:{}, //要执行的方法abi\n            transferJson:{}\n        }\n    }\n\n    handleClickOpen = (data) => {\n        // console.log('32323:',data);\n        if(data.inputs.length === 0) {\n            console.log(data);\n            \n            //alert(data.name);\n            eth.accounts().then((accounts) => {\n                const SimpleStore = eth.contract(this.state.contractabi).at(this.props.contractAddress);    \n                 // use a method that comes with the contract\n                SimpleStore[data.name]().then((txHash) => {\n                    let messageText = '';\n                    console.log('typeof txHash => \\n',typeof txHash[0]);\n                    if(typeof txHash[0] === 'object'){\n                        //console.log(txHash[0].toString());\n                        messageText = txHash[0].toString();\n                    }else {\n                        messageText = txHash[0];\n                    }\n                    \n                    this.setMessage(true,messageText)\n              });\n            \n            });\n        } else {\n            console.log(data);\n\n            let deploydata = {};\n            \n            if(data.inputs){\n                for (let item of data.inputs) {\n                    deploydata[item.name] = '';\n                }\n            }    \n            \n            this.setState({\n                todoFunctionAbi:data,\n                open: true, \n                deploydata\n            });\n            \n        }\n        //this.setState({ open: true });\n    }\n    \n    //\n    handleClose = () => {\n        this.setState({ open: false });\n    }\n\n    //\n    setMessage = (isOpen, messageText) => {\n        console.log(isOpen,typeof messageText);\n        // messageText\n        if(isOpen){\n            this.setState({\n                messageIsOpen:isOpen,\n                messageText\n            });\n        } else {\n            this.setState({\n                messageIsOpen:isOpen\n            });\n        }\n    }\n\n    componentDidMount() {\n        console.log(this.props.contractName);\n        console.log(this.props.contractAddress);\n        fetch(`${server_url}/api/chain/abi?apiname=${this.props.contractName}`).then(res => res.json()).then(result => {\n            // console.log(data);\n            console.log(result.data);\n            // let deploydata = {};\n            if (result.code === 0) {\n                let askapi = [];\n                let writeapi = [];\n                //console.log(result);\n                for (let itemapi of result.data.abi) {\n                    //console.log(itemapi);\n                    if (itemapi.type === 'function') {\n                        if(itemapi.constant === true) {\n                            askapi.push(itemapi);\n                        }else {\n                            writeapi.push(itemapi);\n                        }\n                    }\n                }\n         \n               console.log(writeapi);    \n               console.log(askapi);   \n                this.setState({\n                    writeapi,\n                    askapi,\n                    contractabi:result.data.abi,\n                    transferJson:result.data.translate\n                });\n            }\n        }).catch(function (e) {\n            console.log(\"失败\");\n        });\n\n    }\n\n    SetInput = (name, event) => {\n        let deploydata = this.state.deploydata;\n        deploydata[name] = event.target.value;\n        this.setState({\n            deploydata\n        });\n\n    }\n\n    delpoyContract = () => {\n        console.log('this.state.deploydata:',this.state.deploydata);\n        const todoFunctionAbi = this.state.todoFunctionAbi;\n        let argument = Object.values(this.state.deploydata)\n        // var myContract = new web3.eth.Contract(this.state.contract.abi);\n        window.ethereum.enable().then( (accounts) => {\n            console.log(accounts);\n        })\n\n        this.handleClose();\n        eth.accounts().then((accounts) => {\n             \n            const SimpleStore = eth.contract(this.state.contractabi).at(this.props.contractAddress);    \n       \n            SimpleStore[todoFunctionAbi.name](...argument,{from:accounts[0]},(error, result) => {\n         \n                if(!error){\n                    console.log('result:',result);\n                    // this.postDapp(result);\n                    let messageText = '';\n                    console.log('typeof txHash => \\n',typeof result[0]);\n                    if(typeof result[0] === 'object'){\n                        //console.log(txHash[0].toString());\n                        messageText = result[0].toString();\n                    }else {\n                        messageText = result[0];\n                    }\n                    \n                    this.setMessage(true,messageText)\n\n                } else {\n                    console.log('error:',error);\n                }\n        \n            });\n            \n        });\n    }\n\n    delpoyContractt = () => {\n        let argument = Object.values(this.state.deploydata)\n        // var myContract = new web3.eth.Contract(this.state.contract.abi);\n        window.ethereum.enable().then( (accounts) => {\n            console.log(accounts);\n        })\n\n       console.log(this.state.deploydata);\n        eth.accounts().then((accounts) => {\n            const SimpleStore = eth.contract(this.state.contract.abi, this.state.contract.bytecode, {\n              from: accounts[0],\n              gas: 4000000,\n            });\n          \n            // create a new contract\n            SimpleStore.new(...argument,(error, result) => {\n\n                if(!error){\n                    this.postDapp(result);\n                }\n            });\n        });\n  \n\n    }\n\n    postDapp = (txhash) => {\n        \n        let postData = {\n            dappName: '',\n            txHash: txhash,\n            contractInfo: this.props.name,\n            publicAddress: '0x81D723361d4F3e648F2c9c479d88DC6dEBF4fA5f',\n            dappChain: 'kovan'\n        }\n\n        fetch(`${server_url}/api/dapp`, {\n            body: JSON.stringify(postData),\n            headers: {\n                // Authorization: `Bearer ${auth}`,\n                'Content-Type': 'application/json'\n            },\n            method: 'POST'\n        }).then(response => response.json()).then(data => {\n            if (data.id) {\n                navigate(`/dapp/deployed/${txhash}`);\n            }\n        })\n    }\n\n    render() {\n        let { writeapi, askapi,todoFunctionAbi,transferJson } = this.state;\n        const { classes } = this.props;\n        var contractview = ''\n       \n       if(todoFunctionAbi.inputs){\n            contractview = todoFunctionAbi['inputs'].map((data, index) => {\n                const { name } = data;\n                    return (\n                        <Grid key={index}   item xs={12}>\n                                <TextField\n                                    required\n                                    id=\"address1\"\n                                    name={name}\n                                    label={transInput(transferJson,todoFunctionAbi.name, name)}\n                                    onChange={this.SetInput.bind(this,name)}\n                                    fullWidth\n                                    autoComplete=\"billing address-line1\"\n                                />\n                        </Grid>\n                    );\n            }); \n       }\n        \n        return (\n            <div className={classes.root}>\n            {/* <CssBaseline /> */}\n            <Drawer\n              className={classes.drawer}\n              variant=\"permanent\"\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n            >\n              <div className={classes.toolbar} />\n                <List>\n                    {askapi.map((data, index) => (\n                    <ListItem button key={index}>\n                        <ListItemText primary={transFunc(transferJson , data.name)} onClick={() => this.handleClickOpen(data)} />\n                    </ListItem>\n                    ))}\n\n                </List>\n                <Divider />\n                <List>\n                    {writeapi.map((data, index) => (\n                    <ListItem button key={index}>\n                        <ListItemText primary={transFunc(transferJson , data.name)} onClick={() => this.handleClickOpen(data)} />\n                    </ListItem>\n                    ))}\n                </List>\n            </Drawer>\n\n            <main className={classes.content}>\n              <div className={classes.toolbar} />\n              <Typography paragraph>\n                    <TransferCard />  \n              </Typography>\n            </main>\n                <Dialog\n                    className={classes.dialog} \n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                        <DialogTitle id=\"form-dialog-title\">方法名称:{transFunc(transferJson , todoFunctionAbi.name)} </DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>\n                                调用此方法将触发区块链钱包做签名，请慎重操作\n                            </DialogContentText>\n                            {contractview}\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color=\"primary\">\n                            Cancel\n                            </Button>\n                            <Button  onClick={() => this.delpoyContract()} color=\"primary\">\n                            submit\n                            </Button>\n                        </DialogActions>\n                </Dialog>\n                <Massage messageIsOpen={this.state.messageIsOpen} messageText={this.state.messageText}  setMessage = {isOpen => this.setMessage(isOpen)}/>\n          </div>\n        );\n    }\n}\n\nDappCreate.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(DappCreate);\n\n\n\n\n\n"],"sourceRoot":""}