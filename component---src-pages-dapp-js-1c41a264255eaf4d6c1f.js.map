{"version":3,"sources":["webpack:///./src/components/card.js","webpack:///./src/components/Dapplist.js","webpack:///./src/pages/dapp.js","webpack:///./src/lib/translate.js","webpack:///./src/view/dapp/create.js","webpack:///./src/view/dapp/MyDappList.js","webpack:///./src/components/Massage.js","webpack:///./src/components/TransferCard.js","webpack:///./src/view/dapp/manage.js"],"names":["ComplexGrid","props","classes","option","console","log","react_default","a","createElement","className","root","Paper_default","paper","Grid_default","container","spacing","item","ButtonBase_default","image","onClick","navigate","contractName","img","alt","src","imgUrl","xs","sm","direction","Typography_default","gutterBottom","variant","title","description","Button_default","color","size","button","propTypes","PropTypes","object","isRequired","withStyles","theme","flexGrow","padding","unit","margin","maxWidth","minHeight","width","height","display","maxHeight","FullWidthGrid","_this","_React$Component","call","this","state","contract","componentWillMount","_this2","fetch","server_url","then","response","json","result","code","setState","data","catch","err","render","Gridview","map","index","key","card","React","Component","boxShadow","marginTop","textAlign","palette","text","secondary","ArticlePage","_Component","DappPage","apply","arguments","inheritsLoose_default","prototype","MaLayout","style","paddingTop","es","create","path","Dapplist","manage","MyDappList","Footer","__webpack_require__","d","__webpack_exports__","transFunc","transInput","jsonData","funcName","value","inputName","inputs","DappCreate","SetInput","name","event","deploydata","target","delpoyContract","argument","Object","values","window","ethereum","enable","accounts","eth","SimpleStore","abi","bytecode","from","gas","new","concat","error","postDapp","txhash","postData","dappName","txHash","contractInfo","publicAddress","userinfo","address","dappChain","network","body","JSON","stringify","headers","Content-Type","method","id","inputlist","transferJson","componentDidMount","net_version","localStorage","getItem","parse","res","_iterator","_isArray","Array","isArray","_i","Symbol","iterator","_ref","length","next","done","itemapi","type","_iterator2","_isArray2","_i2","_ref2","translate","e","_this3","_this$state","contractview","react__WEBPACK_IMPORTED_MODULE_7___default","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_13___default","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_15___default","required","label","onChange","bind","fullWidth","autoComplete","_material_ui_core_Paper__WEBPACK_IMPORTED_MODULE_19___default","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_14___default","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_16___default","submit","flexDirection","alignItems","avatar","backgroundColor","main","form","DappList","dapplist","contractAddress","react__WEBPACK_IMPORTED_MODULE_1___default","_material_ui_core_Paper__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_7___default","_material_ui_core_ButtonBase__WEBPACK_IMPORTED_MODULE_9___default","wordWrap","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_8___default","href","rel","maxwidth","maxheight","MediaControlCard","setMessage","messageText","messageIsOpen","Snackbar_default","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","ContentProps","aria-describedby","message","action","IconButton_default","aria-label","close","Close_default","createData","calories","fat","carbs","protein","rows","TransferCard","Table_default","table","TableHead_default","TableRow_default","TableCell_default","numeric","TableBody_default","row","component","scope","handleClickOpen","contractabi","at","toString","todoFunctionAbi","handleClose","isOpen","delpoyContractt","askapi","writeapi","constant","push","TextField_default","Drawer_default","drawer","drawerPaper","toolbar","List_default","ListItem_default","ListItemText_default","primary","Divider_default","content","paragraph","components_TransferCard","Dialog_default","dialog","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","DialogActions_default","Massage","appBar","zIndex","flexShrink","mixins","minWidth"],"mappings":"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","file":"component---src-pages-dapp-js-1c41a264255eaf4d6c1f.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Button from '@material-ui/core/Button';\n\nimport { navigate } from \"@reach/router\";\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing.unit * 2,\n    margin: 'auto',\n    maxWidth: 600,\n    minHeight:180\n  },\n  image: {\n    width: 128,\n    height: 128,\n  },\n  img: {\n    margin: 'auto',\n    display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%',\n  },\n  button: {\n    margin: theme.spacing.unit,\n  },\n});\n\n\nfunction ComplexGrid(props) {\n  const { classes,option } = props;\n  console.log(option);\n  return (\n    <div className={classes.root}>\n\n      <Paper className={classes.paper}>\n     \n        <Grid container spacing={16}>\n          <Grid item>\n            <ButtonBase className={classes.image}  onClick={() => navigate(`/dapp/create/${option.contractName}`) } >\n              <img className={classes.img} alt=\"complex\" src={option.imgUrl} />\n            </ButtonBase>\n          </Grid>\n\n          <Grid item xs={12} sm container>\n            <Grid item xs container direction=\"column\" spacing={16}>\n              <Grid item xs>\n                <Typography gutterBottom variant=\"subtitle1\">\n                     {option.title}\n                </Typography>\n                <Typography gutterBottom >\n                    {option.description}\n                </Typography>\n         \n                <Button color=\"primary\" size=\"small\" className={classes.button}   onClick={() => navigate(`/dapp/create/${option.contractName}`) } >\n                    部  署\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n \n      </Paper>\n     \n    </div>\n  );\n}\n\nComplexGrid.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ComplexGrid);\n","// import React from 'react';\n// import PropTypes from 'prop-types';\n// import { withStyles } from '@material-ui/core/styles';\n\n// import Grid from '@material-ui/core/Grid';\n\n// import { server_url } from '../lib/config';\n// import fetch from 'node-fetch';\n// import Card from './card';\n// const styles = theme => ({\n//   root: {\n//     flexGrow: 1,\n//     boxShadow: 'none',\n//     padding:'30px',\n//     marginTop: '50px',\n    \n//   },\n//   paper: {\n//     padding: theme.spacing.unit * 2,\n//     textAlign: 'center',\n//     color: theme.palette.text.secondary,\n//   },\n// });\n\n\n// class FullWidthGrid extends React.Component{\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             contract: []\n//         }\n//     }\n    \n//     componentDidMount() {\n//         fetch(`${server_url}/api/chain/allcontractlist`).then(response => response.json())\n//             .then(result => {\n//                 if (result.code === 0) {\n//                     // console.log(result);\n//                     this.setState({\n//                         contract: result.data\n//                     });\n//                 }\n//             }).catch(err => {\n//                 console.log(err);\n//             });\n//     }\n\n//     render() {\n//        // let { contract } = this.state;\n//         const { classes } = this.props;\n\n//         const { contract } = this.state;\n//         // console.log(contract);\n//         const Gridview = contract.map((data, index) => {\n//             // const { title, description, contractName } = data;\n//             return (\n//                 <Grid  key={index} item xs={12} sm={6} >\n//                     <Card option={data} />\n//                 </Grid>\n          \n//             );\n\n//         });\n//         //console.log(classes.root);\n//         return (\n//             <div className={classes.root} >\n//                 <Grid container spacing={24}>\n//                    {Gridview}\n//                 </Grid>\n//             </div>\n//         );\n//     }\n// }\n\n\n// FullWidthGrid.propTypes = {\n//   classes: PropTypes.object.isRequired,\n// };\n\n// export default withStyles(styles)(FullWidthGrid);\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport fetch from 'node-fetch';\nimport { server_url } from '../lib/config';\nimport { navigate } from \"@reach/router\";\n\nimport Card from './card';\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    boxShadow: 'none',\n    padding:'30px',\n    marginTop:'50px'\n  },\n  paper: {\n    padding: theme.spacing.unit * 2,\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n});\n\n\nclass FullWidthGrid extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            contract: []\n        }\n    }\n    componentWillMount() {\n        fetch(`${server_url}/api/chain/allcontractlist`).then(response => response.json())\n            .then(result => {\n                if (result.code == 0) {\n                    // console.log(result);\n                    this.setState({\n                        contract: result.data\n                    });\n                }\n            }).catch(err => {\n                console.log(err);\n            });\n    }\n\n    render() {\n       // let { contract } = this.state;\n        const { classes } = this.props;\n\n        const { contract } = this.state;\n        // console.log(contract);\n        const Gridview = contract.map((data, index) => {\n            const { title, description, contractName } = data;\n            return (\n                <Grid  key={index} item xs={12} sm={6} >\n                    <Card option={data} />\n                </Grid>\n          \n            );\n\n        });\n        //console.log(classes.root);\n        return (\n            <div className={classes.root} >\n                <Grid container spacing={24}>\n                   {Gridview}\n                </Grid>\n            </div>\n        );\n    }\n}\n\n\n\nFullWidthGrid.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(FullWidthGrid);\n","import React, { Component } from 'react';\n\nimport { Router } from '@reach/router';\n\nimport DappCreate from '../view/dapp/create';\n\nimport MyDappList from '../view/dapp/MyDappList';\nimport Dapplist from '../components/Dapplist'\n\nimport DappManage from '../view/dapp/manage';\n\nimport MaLayout from '../components/MaLayout'\nimport Footer from '../components/Footer';\nconst ArticlePage = class DappPage extends Component {\n    render() { \n        return ( \n            <div>\n                <MaLayout>\n                    <div\n                        style={{\n                            margin: '0 auto',\n                            // maxWidth: 60,\n                            padding: '0px 1.0875rem 1.45rem',\n                            paddingTop: 0,\n                        }}\n                    >\n                        <Router>\n                            <DappCreate path=\"/dapp/create/:name/\" />\n                            <Dapplist  path=\"/dapp/index\"/>  \n                            <DappManage path=\"/dapp/manage/:contractName/:contractAddress/\" />\n                      \n                            <MyDappList path=\"/dapp/:address/\" />\n                        </Router>\n                    \n                    </div>\n                    <Footer /> \n                </MaLayout>   \n            </div>  \n        ) \n    }\n};\n\nexport default ArticlePage","var transFunc  = (jsonData, funcName) => {\n    if(jsonData[funcName]){\n        console.log('jsonData[name].value',jsonData[funcName].value);\n        return jsonData[funcName].value;\n    } else {\n        return funcName;\n    }\n}\n\nvar transInput  = (jsonData, funcName, inputName) => {\n    console.log(jsonData,funcName, inputName);\n    if(!jsonData[funcName]){\n        return inputName;\n    }\n    if(!jsonData[funcName].inputs) {\n        return inputName;\n    } else if (jsonData[funcName].inputs[inputName]) {\n        return jsonData[funcName].inputs[inputName];\n    } else {\n        return inputName;\n    }\n    \n    \n}\n\nexport {transFunc,transInput}","import React from 'react'\nimport { server_url } from '../../lib/config';\nimport fetch from 'node-fetch';\nimport { navigate } from \"@reach/router\";\nimport { eth } from '../../lib/eth';\nimport { transInput } from '../../lib/translate';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\n\nimport Button from '@material-ui/core/Button';\n\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport Paper from '@material-ui/core/Paper';\n\nconst styles = theme => ({\n\n    paper: {\n        maxWidth: '550px',\n        margin: 'auto',\n        marginTop: theme.spacing.unit * 12,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: `${theme.spacing.unit * 5}px ${theme.spacing.unit * 5}px ${theme.spacing.unit * 3}px`,\n    },\n    avatar: {\n        margin: theme.spacing.unit,\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing.unit,\n    },\n    submit: {\n        marginTop: theme.spacing.unit * 3,\n    },\n});\n\nclass DappCreate extends React.Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            contract: {},\n            inputlist: [],\n            deploydata: {},\n            userinfo: {},\n            network:'',\n            transferJson:{}\n\n        }\n    }\n\n    componentDidMount() {\n        var network = '';\n       // console.log('1111');\n        eth.net_version().then((result) => {\n            switch (result) {\n                case \"1\":\n                    console.log('This is mainnet')\n                    network = 'eth_main'\n                    break\n                case \"2\":\n                    console.log('This is the deprecated Morden test network.')\n                    network = 'eth_morden'\n                    break\n                case \"3\":\n                    console.log('This is the ropsten test network.')\n                    network = 'eth_ropsten'\n                    break\n                case \"4\":\n                    console.log('This is the Rinkeby test network.')\n                    network = 'eth_rinkeby'\n                    break\n                case \"42\":\n                    console.log('This is the Kovan test network.')\n                    network = 'eth_kovan'\n                    break\n                default:\n                    console.log('This is an unknown network.')\n                    network = 'eth_unknown'\n            }\n            this.setState({\n                network\n            });\n        })\n\n        if (localStorage.getItem(\"userinfo\")) {\n            let userinfo = JSON.parse(localStorage.getItem(\"userinfo\"));\n             this.setState({\n                userinfo\n             });\n        }\n        fetch(`${server_url}/api/chain/abi?apiname=${this.props.name}`).then(res => res.json()).then(result => {\n            // console.log(data);\n            // console.log(result.data);\n            let deploydata = {};\n            if (result.code === 0) {\n                let inputlist = [];\n                //console.log(result);\n                for (let itemapi of result.data.abi) {\n                    if (itemapi.type === 'constructor') {\n                        inputlist = itemapi.inputs;\n                    }\n                }\n                for (let data of inputlist) {\n                    deploydata[data.name] = '';\n                }\n                this.setState({\n                    contract: result.data,\n                    transferJson:result.data.translate,\n                    inputlist,\n                    deploydata\n                });\n            }\n        }).catch(function (e) {\n            console.log(\"失败\");\n        });\n       \n    }\n\n    SetInput = (name, event) => {\n        //console.log(event.target.value);\n       // console.log(name);\n        let deploydata = this.state.deploydata;\n        deploydata[name] = event.target.value;\n        this.setState({\n            deploydata\n        });\n\n    }\n\n    delpoyContract = () => {\n        let argument = Object.values(this.state.deploydata)\n        // var myContract = new web3.eth.Contract(this.state.contract.abi);\n        window.ethereum.enable().then( (accounts) => {\n            console.log(accounts);\n        })\n\n       console.log(this.state.deploydata);\n        eth.accounts().then((accounts) => {\n            const SimpleStore = eth.contract(this.state.contract.abi, this.state.contract.bytecode, {\n              from: accounts[0],\n              gas: 4000000,\n            });\n          \n            // create a new contract\n            SimpleStore.new(...argument,(error, result) => {\n                //console.log('error:',error);\n                if(!error){\n                    this.postDapp(result);\n                }\n            });\n        });\n  \n    }\n\n\n    postDapp = (txhash) => {\n        \n        let postData = {\n            dappName: '',\n            txHash: txhash,\n            contractInfo: this.props.name,\n            publicAddress: this.state.userinfo.address,\n            dappChain: this.state.network //不应该写死\n        }\n        console.log(postData);\n        fetch(`${server_url}/api/dapp`, {\n            body: JSON.stringify(postData),\n            headers: {\n                // Authorization: `Bearer ${auth}`,\n                'Content-Type': 'application/json'\n            },\n            method: 'POST'\n        }).then(response => response.json()).then(data => {\n            if (data.id) {\n                // navigateTo('/dapp/index')\n                navigate(`/dapp/deployed/${txhash}`);\n            }\n        })\n    }\n\n    render() {\n        let { inputlist,transferJson } = this.state;\n        const { classes } = this.props;\n       // console.log(inputlist);\n        const contractview = inputlist.map((data, index) => {\n            const { name } = data;\n                return (\n                    <Grid key={index}   item xs={12}>\n                        <TextField\n                            required\n                            id=\"address1\"\n                            name={name}\n                            // label={name}\n                            label={transInput(transferJson,'constructor', name)}\n                            onChange={this.SetInput.bind(this,name)}\n                            fullWidth\n                            autoComplete=\"billing address-line1\"\n                        />\n                    </Grid>\n                );\n        });   \n        return (\n            <div style={{ minHeight: '600px' }}>\n                <Paper className={classes.paper}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        合约部署\n                    </Typography>\n                    <Grid container spacing={24}>\n                        {contractview}\n                    </Grid>\n\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={() => this.delpoyContract()}\n                    >\n                        确认\n                    </Button>\n                </Paper>\n            </div>\n        );\n    }\n}\n\nDappCreate.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(DappCreate);\n\n\n\n","import React from 'react';\nimport fetch from 'node-fetch';\nimport { server_url } from '../../lib/config';\n\n\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport ButtonBase from '@material-ui/core/ButtonBase';\n\n\nimport { navigate } from \"@reach/router\";\nconst styles = theme => ({\n\n    root: {\n        // flexGrow: 1,\n        marginTop:10\n      },\n      paper: {\n        padding: theme.spacing.unit * 2,\n        margin: 'auto',\n        maxWidth: 660,\n        height:140,\n      },\n      image: {\n        maxwidth: '80px',\n        maxheight: '80px',\n      },\n      img: {\n        margin: 'auto',\n        display: 'block',\n        maxWidth: '80px',\n        maxHeight: '80px',\n      },\n  \n});\n\nclass DappList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            dapplist: []\n        }\n    }\n\n    componentDidMount() {\n        fetch(`${server_url}/api/dapp/${this.props.address}?chain=eth_ropsten`).then(res => res.json()).then(result => {\n            console.log(result);\n            this.setState({\n                dapplist: result\n            });\n\n        }).catch(function (e) {\n            console.log(\"失败\");\n        });\n    }\n\n    render() {\n        const { dapplist } = this.state;\n        const { classes } = this.props;\n        const contractview = dapplist.map((data, index) => {\n            console.log(data);\n            const { contractInfo, txHash,contractAddress } = data;\n            return (\n                <div  key={index} className={classes.root}>\n                    <Paper className={classes.paper}>\n                        <Grid container spacing={24}>\n                            <Grid item>\n                                <ButtonBase className={classes.image}  onClick={() => navigate(`/dapp/manage/${contractInfo}/${contractAddress}`)} >\n                                    <img className={classes.img} alt=\"complex\" src=\"https://smartz.io/static/img/erc-20.png\" />\n                                </ButtonBase>\n                            </Grid>\n                            <Grid item xs={8} sm container>\n                                <Grid item xs container direction=\"column\" >\n                                    <Grid item xs style={{maxWidth:'500px',wordWrap: 'break-word'}} >\n                                        <Typography gutterBottom variant=\"subtitle1\">\n                                            {contractInfo}\n                                         </Typography>\n                                              合约地址:\n                                            <Typography color=\"textSecondary\"  >   \n                                                <a href=\"http://localhost:8000\" color=\"textSecondary\"  target=\"_blank\"  rel=\"noopener noreferrer\" >\n                                                {txHash} \n                                                </a>\n                                            </Typography>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                    \n                </div>\n             \n            );\n        });\n\n        return (\n            <div style={{ minHeight: '600px',marginTop:'80px' }} >\n                {contractview}\n            </div >\n        )\n    }\n}\n\nDappList.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(DappList);\n\n\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst styles = theme => ({\n  close: {\n    padding: theme.spacing.unit / 2,\n  },\n});\n\n// class SimpleSnackbar extends React.Component {\n \n//     constructor(props) {\n//         super(props);\n//     }\n//     render() {\n//     const { classes } = this.props;\n//     return (\n//       <div>\n//         <Snackbar\n//           anchorOrigin={{\n//             vertical: 'bottom',\n//             horizontal: 'center',\n//           }}\n//           open={this.props.messageIsOpen}\n//           autoHideDuration={6000}\n//           onClose={() => this.props.setMessage(false)}\n//           ContentProps={{\n//             'aria-describedby': 'message-id',\n//           }}\n//           message={<span id=\"message-id\">{this.props.messageText}</span>}\n//           action={[\n//             <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={() => this.props.setMessage(false)}>\n//               已读\n//             </Button>,\n//             <IconButton\n//               key=\"close\"\n//               aria-label=\"Close\"\n//               color=\"inherit\"\n//               className={classes.close}\n//             //   onClick={this.handleClose}\n//               onClick={() => this.props.setMessage(false)}\n//             >\n//               <CloseIcon />\n//             </IconButton>,\n//           ]}\n//         />\n//       </div>\n//     );\n//   }\n// }\n\n// SimpleSnackbar.propTypes = {\n//   classes: PropTypes.object.isRequired,\n// };\n\n// export default withStyles(styles)(SimpleSnackbar);\n\n\nfunction MediaControlCard(props) {\n  const { classes, setMessage, messageText, messageIsOpen } = props;\n\n  return (\n    <div>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n          }}\n          open={messageIsOpen}\n          autoHideDuration={6000}\n          onClose={() => setMessage(false)}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">{messageText}</span>}\n          action={[\n            <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={() =>  setMessage(false)}>\n              已读\n            </Button>,\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"inherit\"\n              className={classes.close}\n              onClick={() => setMessage(false)}\n            >\n              <CloseIcon />\n            </IconButton>,\n          ]}\n        />\n      </div>\n  );\n}\n\nMediaControlCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(MediaControlCard);\n","import React from 'react';\nimport fetch from 'node-fetch';\nimport { server_url } from '../lib/config';\n\n\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst styles = theme => ({\n    \n    root: {\n        // flexGrow: 1,\n        marginTop: 10\n    },\n    paper: {\n        padding: theme.spacing.unit * 2,\n        margin: 'auto',\n        maxWidth: 600,\n        // height: 140,\n    },\n    image: {\n        width: '100px',\n        height: '100px',\n    },\n    img: {\n        margin: 'auto',\n        display: 'block',\n        maxWidth: '80px',\n        maxHeight: '80px',\n    },\n    table: {\n        width: \"90%\",\n        margin:'5px auto'\n    },\n\n});\n\nlet id = 0;\nfunction createData(name, calories, fat, carbs, protein) {\n    id += 1;\n    return { id, name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    // createData('Eclair', 262, 16.0, 24, 6.0),\n    // createData('Cupcake', 305, 3.7, 67, 4.3),\n    // createData('Gingerbread', 356, 16.0, 49, 3.9),\n];\n\nclass TransferCard extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            dapplist: []\n        }\n    }\n\n    componentDidMount() {\n        fetch(`${server_url}/api/dapp/${this.props.address}?chain=eth_ropsten`).then(res => res.json()).then(result => {\n            console.log(result);\n            this.setState({\n                dapplist: result\n            });\n            // let deploydata = {};\n        }).catch(function (e) {\n            console.log(\"失败\");\n        });\n    }\n\n    render() {\n        // const { dapplist } = this.state;\n        const { classes } = this.props;\n        // const contractview = dapplist.map((data, index) => {\n        //     console.log(data);\n        //     const { contractInfo, txHash, contractAddress } = data;\n        //     return (\n        //         <div key={index} className={classes.root}>\n        //             <Paper className={classes.paper}>\n        //                 <Grid container spacing={24}>\n        //                     <Grid item>\n        //                         <ButtonBase className={classes.image} onClick={() => navigate(`/dapp/manage/${contractInfo}/${contractAddress}`)} >\n        //                             <img className={classes.img} alt=\"complex\" src=\"https://smartz.io/static/img/erc-20.png\" />\n        //                         </ButtonBase>\n        //                     </Grid>\n        //                     <Grid item xs={8} sm container>\n        //                         <Grid item xs container direction=\"column\" >\n        //                             <Grid item xs style={{ maxWidth: '400px' }} >\n        //                                 <Typography gutterBottom variant=\"subtitle1\">\n        //                                     {contractInfo}\n        //                                 </Typography>\n        //                                 合约地址:\n        //                                     <Typography color=\"textSecondary\"  >\n        //                                     <a href=\"http://localhost:8000\" color=\"textSecondary\" target=\"_blank\" >\n        //                                         {txHash}\n        //                                     </a>\n        //                                 </Typography>\n        //                             </Grid>\n        //                         </Grid>\n        //                     </Grid>\n        //                 </Grid>\n        //             </Paper>\n\n        //         </div>\n\n        //     );\n        // });\n\n        return (\n            <div style={{ minHeight: '600px', marginTop: '10px' }} >\n                <div className={classes.root}>\n                    <Paper className={classes.paper}>\n                        <Grid container spacing={24}>\n                           \n                            <Grid item xs={8} sm container>\n                                <Grid item xs container direction=\"column\" >\n                                    <Grid item xs style={{ maxWidth: '400px' }} >\n                                        <Typography gutterBottom variant=\"subtitle1\">\n                                            我是合约11\n                                         </Typography>\n                                            合约地址:\n    \n                                            <Typography color=\"textSecondary\">\n                                                <a href=\"http://localhost:8000\"  color=\"textSecondary\" target=\"_blank\"  rel=\"noopener noreferrer\" >\n                                                    luz243434343\n                                                </a>\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </div>\n\n                <div className={classes.root}>\n                    <Paper className={classes.paper}>\n                        <Grid container spacing={24}>\n                          \n                            <Grid item xs={8} sm container>\n                                <Grid item xs container direction=\"column\" >\n                                    <Grid item xs style={{}} >\n                                        <Typography gutterBottom variant=\"subtitle1\">\n                                            方法名称: 转账\n                                         </Typography>\n                                                hashhashhashhashhashhashhashhash\n                                            {/* <Typography color=\"textSecondary\"  > */}\n                                                输入:\n                                                <Table className={classes.table}>\n                                                    <TableHead>\n                                                        <TableRow>\n                                                            <TableCell>参数名</TableCell>\n                                                            <TableCell numeric>值</TableCell>\n                                                            \n                                                        </TableRow>\n                                                    </TableHead>\n                                                    <TableBody>\n                                                        {rows.map(row => {\n                                                            return (\n                                                                <TableRow key={row.id}>\n                                                                    <TableCell component=\"th\" scope=\"row\">\n                                                                        {row.name}\n                                                                    </TableCell>\n                                                                    <TableCell numeric>{row.calories}</TableCell>\n                                                                </TableRow>\n                                                            );\n                                                        })}\n                                                    </TableBody>\n                                                </Table>\n                                           {/* </Typography> */}\n                                            {/* <Typography color=\"textSecondary\"  style={{marginTop:'30px'}}> */}\n                                               结果:\n                                                <Table className={classes.table}>\n                                                    <TableHead>\n                                                        <TableRow>\n                                                            <TableCell>参数名</TableCell>\n                                                            <TableCell numeric>值</TableCell>\n                                                            \n                                                        </TableRow>\n                                                    </TableHead>\n                                                    <TableBody>\n                                                        {rows.map(row => {\n                                                            return (\n                                                                <TableRow key={row.id}>\n                                                                    <TableCell component=\"th\" scope=\"row\">\n                                                                        {row.name}\n                                                                    </TableCell>\n                                                                    <TableCell numeric>{row.calories}</TableCell>\n                                                                </TableRow>\n                                                            );\n                                                        })}\n                                                    </TableBody>\n                                                </Table>\n                                           {/* </Typography> */}\n\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </div>\n\n            </div >\n        )\n    }\n}\n\nTransferCard.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(TransferCard);\n\n\n\n\n\n","import React from 'react'\nimport { server_url } from '../../lib/config';\nimport { transFunc,transInput } from '../../lib/translate';\nimport fetch from 'node-fetch';\nimport { navigate } from \"@reach/router\";\n//import { web3 } from '../../lib/eth';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\n\nimport Button from '@material-ui/core/Button';\n\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\n\nimport Drawer from '@material-ui/core/Drawer';\n\nimport List from '@material-ui/core/List';\n// import Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\n\nimport ListItemText from '@material-ui/core/ListItemText';\n\n// import Mamenu from '../../components/Mamenu';\nimport Massage from '../../components/Massage';\n\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TransferCard from '../../components/TransferCard';\n\nimport { eth } from '../../lib/eth';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n    paper: {\n        maxWidth: '550px',\n        margin: 'auto',\n        marginTop: theme.spacing.unit * 12,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: `${theme.spacing.unit * 5}px ${theme.spacing.unit * 5}px ${theme.spacing.unit * 3}px`,\n    },\n    avatar: {\n        margin: theme.spacing.unit,\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing.unit,\n    },\n    submit: {\n        marginTop: theme.spacing.unit * 3,\n    },\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing.unit * 3,\n    },\n    toolbar: theme.mixins.toolbar,\n    dialog:{\n        minWidth:'600px',\n        margin:'auto'\n    }\n});\n\n\nclass DappCreate extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false, //弹出输入开发\n            messageIsOpen:false, //弹出消息开关\n            messageText:'', //弹出消息开关\n            contractabi: [], //全部abi\n            inputlist: [],\n            deploydata: {},\n            askapi:[],\n            writeapi:[],\n            todoFunctionAbi:{}, //要执行的方法abi\n            transferJson:{}\n        }\n    }\n\n    handleClickOpen = (data) => {\n        // console.log('32323:',data);\n        if(data.inputs.length === 0) {\n            console.log(data);\n            \n            //alert(data.name);\n            eth.accounts().then((accounts) => {\n                const SimpleStore = eth.contract(this.state.contractabi).at(this.props.contractAddress);    \n                 // use a method that comes with the contract\n                SimpleStore[data.name]().then((txHash) => {\n                    let messageText = '';\n                    console.log('typeof txHash => \\n',typeof txHash[0]);\n                    if(typeof txHash[0] === 'object'){\n                        //console.log(txHash[0].toString());\n                        messageText = txHash[0].toString();\n                    }else {\n                        messageText = txHash[0];\n                    }\n                    \n                    this.setMessage(true,messageText)\n              });\n            \n            });\n        } else {\n            console.log(data);\n\n            let deploydata = {};\n            \n            if(data.inputs){\n                for (let item of data.inputs) {\n                    deploydata[item.name] = '';\n                }\n            }    \n            \n            this.setState({\n                todoFunctionAbi:data,\n                open: true, \n                deploydata\n            });\n            \n        }\n        //this.setState({ open: true });\n    }\n    \n    //\n    handleClose = () => {\n        this.setState({ open: false });\n    }\n\n    //\n    setMessage = (isOpen, messageText) => {\n        console.log(isOpen,typeof messageText);\n        // messageText\n        if(isOpen){\n            this.setState({\n                messageIsOpen:isOpen,\n                messageText\n            });\n        } else {\n            this.setState({\n                messageIsOpen:isOpen\n            });\n        }\n    }\n\n    componentDidMount() {\n        console.log(this.props.contractName);\n        console.log(this.props.contractAddress);\n        fetch(`${server_url}/api/chain/abi?apiname=${this.props.contractName}`).then(res => res.json()).then(result => {\n            // console.log(data);\n            console.log(result.data);\n            // let deploydata = {};\n            if (result.code === 0) {\n                let askapi = [];\n                let writeapi = [];\n                //console.log(result);\n                for (let itemapi of result.data.abi) {\n                    //console.log(itemapi);\n                    if (itemapi.type === 'function') {\n                        if(itemapi.constant === true) {\n                            askapi.push(itemapi);\n                        }else {\n                            writeapi.push(itemapi);\n                        }\n                    }\n                }\n         \n               console.log(writeapi);    \n               console.log(askapi);   \n                this.setState({\n                    writeapi,\n                    askapi,\n                    contractabi:result.data.abi,\n                    transferJson:result.data.translate\n                });\n            }\n        }).catch(function (e) {\n            console.log(\"失败\");\n        });\n\n    }\n\n    SetInput = (name, event) => {\n        let deploydata = this.state.deploydata;\n        deploydata[name] = event.target.value;\n        this.setState({\n            deploydata\n        });\n\n    }\n\n    delpoyContract = () => {\n        console.log('this.state.deploydata:',this.state.deploydata);\n        const todoFunctionAbi = this.state.todoFunctionAbi;\n        let argument = Object.values(this.state.deploydata)\n        // var myContract = new web3.eth.Contract(this.state.contract.abi);\n        window.ethereum.enable().then( (accounts) => {\n            console.log(accounts);\n        })\n\n        this.handleClose();\n        eth.accounts().then((accounts) => {\n             \n            const SimpleStore = eth.contract(this.state.contractabi).at(this.props.contractAddress);    \n       \n            SimpleStore[todoFunctionAbi.name](...argument,{from:accounts[0]},(error, result) => {\n         \n                if(!error){\n                    console.log('result:',result);\n                    // this.postDapp(result);\n                    let messageText = '';\n                    console.log('typeof txHash => \\n',typeof result[0]);\n                    if(typeof result[0] === 'object'){\n                        //console.log(txHash[0].toString());\n                        messageText = result[0].toString();\n                    }else {\n                        messageText = result[0];\n                    }\n                    \n                    this.setMessage(true,messageText)\n\n                } else {\n                    console.log('error:',error);\n                }\n        \n            });\n            \n        });\n    }\n\n    delpoyContractt = () => {\n        let argument = Object.values(this.state.deploydata)\n        // var myContract = new web3.eth.Contract(this.state.contract.abi);\n        window.ethereum.enable().then( (accounts) => {\n            console.log(accounts);\n        })\n\n       console.log(this.state.deploydata);\n        eth.accounts().then((accounts) => {\n            const SimpleStore = eth.contract(this.state.contract.abi, this.state.contract.bytecode, {\n              from: accounts[0],\n              gas: 4000000,\n            });\n          \n            // create a new contract\n            SimpleStore.new(...argument,(error, result) => {\n\n                if(!error){\n                    this.postDapp(result);\n                }\n            });\n        });\n  \n\n    }\n\n    postDapp = (txhash) => {\n        \n        let postData = {\n            dappName: '',\n            txHash: txhash,\n            contractInfo: this.props.name,\n            publicAddress: '0x81D723361d4F3e648F2c9c479d88DC6dEBF4fA5f',\n            dappChain: 'kovan'\n        }\n\n        fetch(`${server_url}/api/dapp`, {\n            body: JSON.stringify(postData),\n            headers: {\n                // Authorization: `Bearer ${auth}`,\n                'Content-Type': 'application/json'\n            },\n            method: 'POST'\n        }).then(response => response.json()).then(data => {\n            if (data.id) {\n                navigate(`/dapp/deployed/${txhash}`);\n            }\n        })\n    }\n\n    render() {\n        let { writeapi, askapi,todoFunctionAbi,transferJson } = this.state;\n        const { classes } = this.props;\n        var contractview = ''\n       \n       if(todoFunctionAbi.inputs){\n            contractview = todoFunctionAbi['inputs'].map((data, index) => {\n                const { name } = data;\n                    return (\n                        <Grid key={index}   item xs={12}>\n                                <TextField\n                                    required\n                                    id=\"address1\"\n                                    name={name}\n                                    label={transInput(transferJson,todoFunctionAbi.name, name)}\n                                    onChange={this.SetInput.bind(this,name)}\n                                    fullWidth\n                                    autoComplete=\"billing address-line1\"\n                                />\n                        </Grid>\n                    );\n            }); \n       }\n        \n        return (\n            <div className={classes.root}>\n            {/* <CssBaseline /> */}\n            <Drawer\n              className={classes.drawer}\n              variant=\"permanent\"\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n            >\n              <div className={classes.toolbar} />\n                <List>\n                    {askapi.map((data, index) => (\n                    <ListItem button key={index}>\n                        <ListItemText primary={transFunc(transferJson , data.name)} onClick={() => this.handleClickOpen(data)} />\n                    </ListItem>\n                    ))}\n\n                </List>\n                <Divider />\n                <List>\n                    {writeapi.map((data, index) => (\n                    <ListItem button key={index}>\n                        <ListItemText primary={transFunc(transferJson , data.name)} onClick={() => this.handleClickOpen(data)} />\n                    </ListItem>\n                    ))}\n                </List>\n            </Drawer>\n\n            <main className={classes.content}>\n              <div className={classes.toolbar} />\n              <Typography paragraph>\n                    <TransferCard />  \n              </Typography>\n            </main>\n                <Dialog\n                    className={classes.dialog} \n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                        <DialogTitle id=\"form-dialog-title\">方法名称:{transFunc(transferJson , todoFunctionAbi.name)} </DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>\n                                调用此方法将触发区块链钱包做签名，请慎重操作\n                            </DialogContentText>\n                            {contractview}\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color=\"primary\">\n                            Cancel\n                            </Button>\n                            <Button  onClick={() => this.delpoyContract()} color=\"primary\">\n                            submit\n                            </Button>\n                        </DialogActions>\n                </Dialog>\n                <Massage messageIsOpen={this.state.messageIsOpen} messageText={this.state.messageText}  setMessage = {isOpen => this.setMessage(isOpen)}/>\n          </div>\n        );\n    }\n}\n\nDappCreate.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(DappCreate);\n\n\n\n\n\n"],"sourceRoot":""}