{"version":3,"sources":["webpack:///./src/lib/eth.js","webpack:///./src/view/dapp/create.js","webpack:///./src/view/dapp/MyDappList.js","webpack:///./src/components/Massage.js","webpack:///./src/components/TransferCard.js","webpack:///./src/view/dapp/manage.js","webpack:///./src/pages/dapp.js","webpack:///./src/lib/config.js","webpack:///./src/components/Mamenu.js","webpack:///./src/components/MaLayout.js","webpack:///./src/lib/translate.js"],"names":["eth","Eth","require","window","ethereum","HttpProvider","DappCreate","props","_this","_React$Component","call","this","SetInput","name","event","deploydata","state","target","value","setState","delpoyContract","argument","Object","values","enable","then","accounts","console","log","SimpleStore","contract","abi","bytecode","from","gas","new","apply","concat","error","result","postDapp","txhash","postData","dappName","txHash","contractInfo","publicAddress","userinfo","address","dappChain","network","fetch","server_url","body","JSON","stringify","headers","Content-Type","method","response","json","data","id","navigate","inputlist","transferJson","componentDidMount","_this2","net_version","localStorage","getItem","parse","res","code","_iterator","_isArray","Array","isArray","_i","Symbol","iterator","_ref","length","next","done","itemapi","type","inputs","_iterator2","_isArray2","_i2","_ref2","translate","catch","e","render","_this3","_this$state","classes","contractview","map","index","react_default","a","createElement","Grid_default","key","item","xs","TextField_default","required","label","transInput","onChange","bind","fullWidth","autoComplete","style","minHeight","Paper_default","className","paper","Typography_default","variant","gutterBottom","container","spacing","Button_default","color","submit","onClick","React","Component","propTypes","PropTypes","object","isRequired","withStyles","theme","maxWidth","margin","marginTop","unit","display","flexDirection","alignItems","padding","avatar","backgroundColor","palette","secondary","main","form","width","DappList","dapplist","contractAddress","root","ButtonBase_default","image","img","alt","src","sm","direction","wordWrap","href","rel","height","maxwidth","maxheight","maxHeight","MediaControlCard","setMessage","messageText","messageIsOpen","Snackbar_default","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","ContentProps","aria-describedby","message","action","size","IconButton_default","aria-label","close","Close_default","createData","calories","fat","carbs","protein","rows","TransferCard","Table_default","table","TableHead_default","TableRow_default","TableCell_default","numeric","TableBody_default","row","component","scope","handleClickOpen","contractabi","at","toString","todoFunctionAbi","handleClose","isOpen","delpoyContractt","askapi","writeapi","contractName","constant","push","Drawer_default","drawer","drawerPaper","toolbar","List_default","ListItem_default","button","ListItemText_default","primary","transFunc","Divider_default","content","paragraph","components_TransferCard","Dialog_default","dialog","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","DialogActions_default","Massage","appBar","zIndex","flexShrink","flexGrow","mixins","minWidth","ArticlePage","_Component","DappPage","arguments","inheritsLoose_default","prototype","MaLayout","paddingTop","es","create","path","manage","MyDappList","__webpack_require__","d","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_AppBar__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_AppBar__WEBPACK_IMPORTED_MODULE_3___default","_material_ui_core_Toolbar__WEBPACK_IMPORTED_MODULE_4__","_material_ui_core_Toolbar__WEBPACK_IMPORTED_MODULE_4___default","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_5__","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_5___default","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_6__","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_7__","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_7___default","ButtonAppBar","position","menuButton","grow","marginLeft","marginRight","createMuiTheme","light","dark","contrastText","typography","useNextVariants","shadows","fill","children","react__WEBPACK_IMPORTED_MODULE_1___default","Fragment","_material_ui_core_CssBaseline__WEBPACK_IMPORTED_MODULE_4___default","_material_ui_core_styles_MuiThemeProvider__WEBPACK_IMPORTED_MODULE_3___default","_Mamenu__WEBPACK_IMPORTED_MODULE_6__","node","jsonData","funcName","inputName"],"mappings":"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","file":"component---src-pages-dapp-js-e958fc8c48e0307592c1.js","sourcesContent":["const Eth = require('ethjs');\n\n\nvar eth; \n\nif (typeof window !== `undefined`) {\n    // import Web3 from 'web3';\n    eth  = new Eth(window.ethereum || new Eth.HttpProvider('https://ropsten.infura.io/v3/0045c2ce288a4e649a8f39f3d19446b4'));  \n}\n\nexport {eth,Eth}\n\n\n\n","import React from 'react'\nimport { server_url } from '../../lib/config';\nimport fetch from 'node-fetch';\nimport { navigate } from \"@reach/router\";\nimport { eth } from '../../lib/eth';\nimport { transInput } from '../../lib/translate';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\n\nimport Button from '@material-ui/core/Button';\n\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport Paper from '@material-ui/core/Paper';\n\nconst styles = theme => ({\n\n    paper: {\n        maxWidth: '550px',\n        margin: 'auto',\n        marginTop: theme.spacing.unit * 12,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: `${theme.spacing.unit * 5}px ${theme.spacing.unit * 5}px ${theme.spacing.unit * 3}px`,\n    },\n    avatar: {\n        margin: theme.spacing.unit,\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing.unit,\n    },\n    submit: {\n        marginTop: theme.spacing.unit * 3,\n    },\n});\n\nclass DappCreate extends React.Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            contract: {},\n            inputlist: [],\n            deploydata: {},\n            userinfo: {},\n            network:'',\n            transferJson:{}\n\n        }\n    }\n\n    componentDidMount() {\n        var network = '';\n       // console.log('1111');\n        eth.net_version().then((result) => {\n            switch (result) {\n                case \"1\":\n                    console.log('This is mainnet')\n                    network = 'eth_main'\n                    break\n                case \"2\":\n                    console.log('This is the deprecated Morden test network.')\n                    network = 'eth_morden'\n                    break\n                case \"3\":\n                    console.log('This is the ropsten test network.')\n                    network = 'eth_ropsten'\n                    break\n                case \"4\":\n                    console.log('This is the Rinkeby test network.')\n                    network = 'eth_rinkeby'\n                    break\n                case \"42\":\n                    console.log('This is the Kovan test network.')\n                    network = 'eth_kovan'\n                    break\n                default:\n                    console.log('This is an unknown network.')\n                    network = 'eth_unknown'\n            }\n            this.setState({\n                network\n            });\n        })\n\n        if (localStorage.getItem(\"userinfo\")) {\n            let userinfo = JSON.parse(localStorage.getItem(\"userinfo\"));\n             this.setState({\n                userinfo\n             });\n        }\n        fetch(`${server_url}/api/chain/abi?apiname=${this.props.name}`).then(res => res.json()).then(result => {\n            // console.log(data);\n            // console.log(result.data);\n            let deploydata = {};\n            if (result.code === 0) {\n                let inputlist = [];\n                //console.log(result);\n                for (let itemapi of result.data.abi) {\n                    if (itemapi.type === 'constructor') {\n                        inputlist = itemapi.inputs;\n                    }\n                }\n                for (let data of inputlist) {\n                    deploydata[data.name] = '';\n                }\n                this.setState({\n                    contract: result.data,\n                    transferJson:result.data.translate,\n                    inputlist,\n                    deploydata\n                });\n            }\n        }).catch(function (e) {\n            console.log(\"失败\");\n        });\n       \n    }\n\n    SetInput = (name, event) => {\n        //console.log(event.target.value);\n       // console.log(name);\n        let deploydata = this.state.deploydata;\n        deploydata[name] = event.target.value;\n        this.setState({\n            deploydata\n        });\n\n    }\n\n    delpoyContract = () => {\n        let argument = Object.values(this.state.deploydata)\n        // var myContract = new web3.eth.Contract(this.state.contract.abi);\n        window.ethereum.enable().then( (accounts) => {\n            console.log(accounts);\n        })\n\n       console.log(this.state.deploydata);\n        eth.accounts().then((accounts) => {\n            const SimpleStore = eth.contract(this.state.contract.abi, this.state.contract.bytecode, {\n              from: accounts[0],\n              gas: 4000000,\n            });\n          \n            // create a new contract\n            SimpleStore.new(...argument,(error, result) => {\n                //console.log('error:',error);\n                if(!error){\n                    this.postDapp(result);\n                }\n            });\n        });\n  \n    }\n\n\n    postDapp = (txhash) => {\n        \n        let postData = {\n            dappName: '',\n            txHash: txhash,\n            contractInfo: this.props.name,\n            publicAddress: this.state.userinfo.address,\n            dappChain: this.state.network //不应该写死\n        }\n        console.log(postData);\n        fetch(`${server_url}/api/dapp`, {\n            body: JSON.stringify(postData),\n            headers: {\n                // Authorization: `Bearer ${auth}`,\n                'Content-Type': 'application/json'\n            },\n            method: 'POST'\n        }).then(response => response.json()).then(data => {\n            if (data.id) {\n                // navigateTo('/dapp/index')\n                navigate(`/dapp/deployed/${txhash}`);\n            }\n        })\n    }\n\n    render() {\n        let { inputlist,transferJson } = this.state;\n        const { classes } = this.props;\n       // console.log(inputlist);\n        const contractview = inputlist.map((data, index) => {\n            const { name } = data;\n                return (\n                    <Grid key={index}   item xs={12}>\n                        <TextField\n                            required\n                            id=\"address1\"\n                            name={name}\n                            // label={name}\n                            label={transInput(transferJson,'constructor', name)}\n                            onChange={this.SetInput.bind(this,name)}\n                            fullWidth\n                            autoComplete=\"billing address-line1\"\n                        />\n                    </Grid>\n                );\n        });   \n        return (\n            <div style={{ minHeight: '600px' }}>\n                <Paper className={classes.paper}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        合约部署\n                    </Typography>\n                    <Grid container spacing={24}>\n                        {contractview}\n                    </Grid>\n\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={() => this.delpoyContract()}\n                    >\n                        确认\n                    </Button>\n                </Paper>\n            </div>\n        );\n    }\n}\n\nDappCreate.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(DappCreate);\n\n\n\n","import React from 'react';\nimport fetch from 'node-fetch';\nimport { server_url } from '../../lib/config';\n\n\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport ButtonBase from '@material-ui/core/ButtonBase';\n\n\nimport { navigate } from \"@reach/router\";\nconst styles = theme => ({\n\n    root: {\n        // flexGrow: 1,\n        marginTop:10\n      },\n      paper: {\n        padding: theme.spacing.unit * 2,\n        margin: 'auto',\n        maxWidth: 660,\n        height:140,\n      },\n      image: {\n        maxwidth: '80px',\n        maxheight: '80px',\n      },\n      img: {\n        margin: 'auto',\n        display: 'block',\n        maxWidth: '80px',\n        maxHeight: '80px',\n      },\n  \n});\n\nclass DappList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            dapplist: []\n        }\n    }\n\n    componentDidMount() {\n        fetch(`${server_url}/api/dapp/${this.props.address}?chain=eth_ropsten`).then(res => res.json()).then(result => {\n            console.log(result);\n            this.setState({\n                dapplist: result\n            });\n\n        }).catch(function (e) {\n            console.log(\"失败\");\n        });\n    }\n\n    render() {\n        const { dapplist } = this.state;\n        const { classes } = this.props;\n        const contractview = dapplist.map((data, index) => {\n            console.log(data);\n            const { contractInfo, txHash,contractAddress } = data;\n            return (\n                <div  key={index} className={classes.root}>\n                    <Paper className={classes.paper}>\n                        <Grid container spacing={24}>\n                            <Grid item>\n                                <ButtonBase className={classes.image}  onClick={() => navigate(`/dapp/manage/${contractInfo}/${contractAddress}`)} >\n                                    <img className={classes.img} alt=\"complex\" src=\"https://smartz.io/static/img/erc-20.png\" />\n                                </ButtonBase>\n                            </Grid>\n                            <Grid item xs={8} sm container>\n                                <Grid item xs container direction=\"column\" >\n                                    <Grid item xs style={{maxWidth:'500px',wordWrap: 'break-word'}} >\n                                        <Typography gutterBottom variant=\"subtitle1\">\n                                            {contractInfo}\n                                         </Typography>\n                                              合约地址:\n                                            <Typography color=\"textSecondary\"  >   \n                                                <a href=\"http://localhost:8000\" color=\"textSecondary\"  target=\"_blank\"  rel=\"noopener noreferrer\" >\n                                                {txHash} \n                                                </a>\n                                            </Typography>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                    \n                </div>\n             \n            );\n        });\n\n        return (\n            <div style={{ minHeight: '600px',marginTop:'80px' }} >\n                {contractview}\n            </div >\n        )\n    }\n}\n\nDappList.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(DappList);\n\n\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst styles = theme => ({\n  close: {\n    padding: theme.spacing.unit / 2,\n  },\n});\n\n// class SimpleSnackbar extends React.Component {\n \n//     constructor(props) {\n//         super(props);\n//     }\n//     render() {\n//     const { classes } = this.props;\n//     return (\n//       <div>\n//         <Snackbar\n//           anchorOrigin={{\n//             vertical: 'bottom',\n//             horizontal: 'center',\n//           }}\n//           open={this.props.messageIsOpen}\n//           autoHideDuration={6000}\n//           onClose={() => this.props.setMessage(false)}\n//           ContentProps={{\n//             'aria-describedby': 'message-id',\n//           }}\n//           message={<span id=\"message-id\">{this.props.messageText}</span>}\n//           action={[\n//             <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={() => this.props.setMessage(false)}>\n//               已读\n//             </Button>,\n//             <IconButton\n//               key=\"close\"\n//               aria-label=\"Close\"\n//               color=\"inherit\"\n//               className={classes.close}\n//             //   onClick={this.handleClose}\n//               onClick={() => this.props.setMessage(false)}\n//             >\n//               <CloseIcon />\n//             </IconButton>,\n//           ]}\n//         />\n//       </div>\n//     );\n//   }\n// }\n\n// SimpleSnackbar.propTypes = {\n//   classes: PropTypes.object.isRequired,\n// };\n\n// export default withStyles(styles)(SimpleSnackbar);\n\n\nfunction MediaControlCard(props) {\n  const { classes, setMessage, messageText, messageIsOpen } = props;\n\n  return (\n    <div>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n          }}\n          open={messageIsOpen}\n          autoHideDuration={6000}\n          onClose={() => setMessage(false)}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">{messageText}</span>}\n          action={[\n            <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={() =>  setMessage(false)}>\n              已读\n            </Button>,\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"inherit\"\n              className={classes.close}\n              onClick={() => setMessage(false)}\n            >\n              <CloseIcon />\n            </IconButton>,\n          ]}\n        />\n      </div>\n  );\n}\n\nMediaControlCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(MediaControlCard);\n","import React from 'react';\nimport fetch from 'node-fetch';\nimport { server_url } from '../lib/config';\n\n\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst styles = theme => ({\n    \n    root: {\n        // flexGrow: 1,\n        marginTop: 10\n    },\n    paper: {\n        padding: theme.spacing.unit * 2,\n        margin: 'auto',\n        maxWidth: 600,\n        // height: 140,\n    },\n    image: {\n        width: '100px',\n        height: '100px',\n    },\n    img: {\n        margin: 'auto',\n        display: 'block',\n        maxWidth: '80px',\n        maxHeight: '80px',\n    },\n    table: {\n        width: \"90%\",\n        margin:'5px auto'\n    },\n\n});\n\nlet id = 0;\nfunction createData(name, calories, fat, carbs, protein) {\n    id += 1;\n    return { id, name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    // createData('Eclair', 262, 16.0, 24, 6.0),\n    // createData('Cupcake', 305, 3.7, 67, 4.3),\n    // createData('Gingerbread', 356, 16.0, 49, 3.9),\n];\n\nclass TransferCard extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            dapplist: []\n        }\n    }\n\n    componentDidMount() {\n        fetch(`${server_url}/api/dapp/${this.props.address}?chain=eth_ropsten`).then(res => res.json()).then(result => {\n            console.log(result);\n            this.setState({\n                dapplist: result\n            });\n            // let deploydata = {};\n        }).catch(function (e) {\n            console.log(\"失败\");\n        });\n    }\n\n    render() {\n        // const { dapplist } = this.state;\n        const { classes } = this.props;\n        // const contractview = dapplist.map((data, index) => {\n        //     console.log(data);\n        //     const { contractInfo, txHash, contractAddress } = data;\n        //     return (\n        //         <div key={index} className={classes.root}>\n        //             <Paper className={classes.paper}>\n        //                 <Grid container spacing={24}>\n        //                     <Grid item>\n        //                         <ButtonBase className={classes.image} onClick={() => navigate(`/dapp/manage/${contractInfo}/${contractAddress}`)} >\n        //                             <img className={classes.img} alt=\"complex\" src=\"https://smartz.io/static/img/erc-20.png\" />\n        //                         </ButtonBase>\n        //                     </Grid>\n        //                     <Grid item xs={8} sm container>\n        //                         <Grid item xs container direction=\"column\" >\n        //                             <Grid item xs style={{ maxWidth: '400px' }} >\n        //                                 <Typography gutterBottom variant=\"subtitle1\">\n        //                                     {contractInfo}\n        //                                 </Typography>\n        //                                 合约地址:\n        //                                     <Typography color=\"textSecondary\"  >\n        //                                     <a href=\"http://localhost:8000\" color=\"textSecondary\" target=\"_blank\" >\n        //                                         {txHash}\n        //                                     </a>\n        //                                 </Typography>\n        //                             </Grid>\n        //                         </Grid>\n        //                     </Grid>\n        //                 </Grid>\n        //             </Paper>\n\n        //         </div>\n\n        //     );\n        // });\n\n        return (\n            <div style={{ minHeight: '600px', marginTop: '10px' }} >\n                <div className={classes.root}>\n                    <Paper className={classes.paper}>\n                        <Grid container spacing={24}>\n                           \n                            <Grid item xs={8} sm container>\n                                <Grid item xs container direction=\"column\" >\n                                    <Grid item xs style={{ maxWidth: '400px' }} >\n                                        <Typography gutterBottom variant=\"subtitle1\">\n                                            我是合约11\n                                         </Typography>\n                                            合约地址:\n    \n                                            <Typography color=\"textSecondary\">\n                                                <a href=\"http://localhost:8000\"  color=\"textSecondary\" target=\"_blank\"  rel=\"noopener noreferrer\" >\n                                                    luz243434343\n                                                </a>\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </div>\n\n                <div className={classes.root}>\n                    <Paper className={classes.paper}>\n                        <Grid container spacing={24}>\n                          \n                            <Grid item xs={8} sm container>\n                                <Grid item xs container direction=\"column\" >\n                                    <Grid item xs style={{}} >\n                                        <Typography gutterBottom variant=\"subtitle1\">\n                                            方法名称: 转账\n                                         </Typography>\n                                                hashhashhashhashhashhashhashhash\n                                            {/* <Typography color=\"textSecondary\"  > */}\n                                                输入:\n                                                <Table className={classes.table}>\n                                                    <TableHead>\n                                                        <TableRow>\n                                                            <TableCell>参数名</TableCell>\n                                                            <TableCell numeric>值</TableCell>\n                                                            \n                                                        </TableRow>\n                                                    </TableHead>\n                                                    <TableBody>\n                                                        {rows.map(row => {\n                                                            return (\n                                                                <TableRow key={row.id}>\n                                                                    <TableCell component=\"th\" scope=\"row\">\n                                                                        {row.name}\n                                                                    </TableCell>\n                                                                    <TableCell numeric>{row.calories}</TableCell>\n                                                                </TableRow>\n                                                            );\n                                                        })}\n                                                    </TableBody>\n                                                </Table>\n                                           {/* </Typography> */}\n                                            {/* <Typography color=\"textSecondary\"  style={{marginTop:'30px'}}> */}\n                                               结果:\n                                                <Table className={classes.table}>\n                                                    <TableHead>\n                                                        <TableRow>\n                                                            <TableCell>参数名</TableCell>\n                                                            <TableCell numeric>值</TableCell>\n                                                            \n                                                        </TableRow>\n                                                    </TableHead>\n                                                    <TableBody>\n                                                        {rows.map(row => {\n                                                            return (\n                                                                <TableRow key={row.id}>\n                                                                    <TableCell component=\"th\" scope=\"row\">\n                                                                        {row.name}\n                                                                    </TableCell>\n                                                                    <TableCell numeric>{row.calories}</TableCell>\n                                                                </TableRow>\n                                                            );\n                                                        })}\n                                                    </TableBody>\n                                                </Table>\n                                           {/* </Typography> */}\n\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </div>\n\n            </div >\n        )\n    }\n}\n\nTransferCard.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(TransferCard);\n\n\n\n\n\n","import React from 'react'\nimport { server_url } from '../../lib/config';\nimport { transFunc,transInput } from '../../lib/translate';\nimport fetch from 'node-fetch';\nimport { navigate } from \"@reach/router\";\n//import { web3 } from '../../lib/eth';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\n\nimport Button from '@material-ui/core/Button';\n\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\n\nimport Drawer from '@material-ui/core/Drawer';\n\nimport List from '@material-ui/core/List';\n// import Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\n\nimport ListItemText from '@material-ui/core/ListItemText';\n\n// import Mamenu from '../../components/Mamenu';\nimport Massage from '../../components/Massage';\n\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TransferCard from '../../components/TransferCard';\n\nimport { eth } from '../../lib/eth';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n    paper: {\n        maxWidth: '550px',\n        margin: 'auto',\n        marginTop: theme.spacing.unit * 12,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: `${theme.spacing.unit * 5}px ${theme.spacing.unit * 5}px ${theme.spacing.unit * 3}px`,\n    },\n    avatar: {\n        margin: theme.spacing.unit,\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing.unit,\n    },\n    submit: {\n        marginTop: theme.spacing.unit * 3,\n    },\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing.unit * 3,\n    },\n    toolbar: theme.mixins.toolbar,\n    dialog:{\n        minWidth:'600px',\n        margin:'auto'\n    }\n});\n\n\nclass DappCreate extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false, //弹出输入开发\n            messageIsOpen:false, //弹出消息开关\n            messageText:'', //弹出消息开关\n            contractabi: [], //全部abi\n            inputlist: [],\n            deploydata: {},\n            askapi:[],\n            writeapi:[],\n            todoFunctionAbi:{}, //要执行的方法abi\n            transferJson:{}\n        }\n    }\n\n    handleClickOpen = (data) => {\n        // console.log('32323:',data);\n        if(data.inputs.length === 0) {\n            console.log(data);\n            \n            //alert(data.name);\n            eth.accounts().then((accounts) => {\n                const SimpleStore = eth.contract(this.state.contractabi).at(this.props.contractAddress);    \n                 // use a method that comes with the contract\n                SimpleStore[data.name]().then((txHash) => {\n                    let messageText = '';\n                    console.log('typeof txHash => \\n',typeof txHash[0]);\n                    if(typeof txHash[0] === 'object'){\n                        //console.log(txHash[0].toString());\n                        messageText = txHash[0].toString();\n                    }else {\n                        messageText = txHash[0];\n                    }\n                    \n                    this.setMessage(true,messageText)\n              });\n            \n            });\n        } else {\n            console.log(data);\n\n            let deploydata = {};\n            \n            if(data.inputs){\n                for (let item of data.inputs) {\n                    deploydata[item.name] = '';\n                }\n            }    \n            \n            this.setState({\n                todoFunctionAbi:data,\n                open: true, \n                deploydata\n            });\n            \n        }\n        //this.setState({ open: true });\n    }\n    \n    //\n    handleClose = () => {\n        this.setState({ open: false });\n    }\n\n    //\n    setMessage = (isOpen, messageText) => {\n        console.log(isOpen,typeof messageText);\n        // messageText\n        if(isOpen){\n            this.setState({\n                messageIsOpen:isOpen,\n                messageText\n            });\n        } else {\n            this.setState({\n                messageIsOpen:isOpen\n            });\n        }\n    }\n\n    componentDidMount() {\n        console.log(this.props.contractName);\n        console.log(this.props.contractAddress);\n        fetch(`${server_url}/api/chain/abi?apiname=${this.props.contractName}`).then(res => res.json()).then(result => {\n            // console.log(data);\n            console.log(result.data);\n            // let deploydata = {};\n            if (result.code === 0) {\n                let askapi = [];\n                let writeapi = [];\n                //console.log(result);\n                for (let itemapi of result.data.abi) {\n                    //console.log(itemapi);\n                    if (itemapi.type === 'function') {\n                        if(itemapi.constant === true) {\n                            askapi.push(itemapi);\n                        }else {\n                            writeapi.push(itemapi);\n                        }\n                    }\n                }\n         \n               console.log(writeapi);    \n               console.log(askapi);   \n                this.setState({\n                    writeapi,\n                    askapi,\n                    contractabi:result.data.abi,\n                    transferJson:result.data.translate\n                });\n            }\n        }).catch(function (e) {\n            console.log(\"失败\");\n        });\n\n    }\n\n    SetInput = (name, event) => {\n        let deploydata = this.state.deploydata;\n        deploydata[name] = event.target.value;\n        this.setState({\n            deploydata\n        });\n\n    }\n\n    delpoyContract = () => {\n        console.log('this.state.deploydata:',this.state.deploydata);\n        const todoFunctionAbi = this.state.todoFunctionAbi;\n        let argument = Object.values(this.state.deploydata)\n        // var myContract = new web3.eth.Contract(this.state.contract.abi);\n        window.ethereum.enable().then( (accounts) => {\n            console.log(accounts);\n        })\n\n        this.handleClose();\n        eth.accounts().then((accounts) => {\n             \n            const SimpleStore = eth.contract(this.state.contractabi).at(this.props.contractAddress);    \n       \n            SimpleStore[todoFunctionAbi.name](...argument,{from:accounts[0]},(error, result) => {\n         \n                if(!error){\n                    console.log('result:',result);\n                    // this.postDapp(result);\n                    let messageText = '';\n                    console.log('typeof txHash => \\n',typeof result[0]);\n                    if(typeof result[0] === 'object'){\n                        //console.log(txHash[0].toString());\n                        messageText = result[0].toString();\n                    }else {\n                        messageText = result[0];\n                    }\n                    \n                    this.setMessage(true,messageText)\n\n                } else {\n                    console.log('error:',error);\n                }\n        \n            });\n            \n        });\n    }\n\n    delpoyContractt = () => {\n        let argument = Object.values(this.state.deploydata)\n        // var myContract = new web3.eth.Contract(this.state.contract.abi);\n        window.ethereum.enable().then( (accounts) => {\n            console.log(accounts);\n        })\n\n       console.log(this.state.deploydata);\n        eth.accounts().then((accounts) => {\n            const SimpleStore = eth.contract(this.state.contract.abi, this.state.contract.bytecode, {\n              from: accounts[0],\n              gas: 4000000,\n            });\n          \n            // create a new contract\n            SimpleStore.new(...argument,(error, result) => {\n\n                if(!error){\n                    this.postDapp(result);\n                }\n            });\n        });\n  \n\n    }\n\n    postDapp = (txhash) => {\n        \n        let postData = {\n            dappName: '',\n            txHash: txhash,\n            contractInfo: this.props.name,\n            publicAddress: '0x81D723361d4F3e648F2c9c479d88DC6dEBF4fA5f',\n            dappChain: 'kovan'\n        }\n\n        fetch(`${server_url}/api/dapp`, {\n            body: JSON.stringify(postData),\n            headers: {\n                // Authorization: `Bearer ${auth}`,\n                'Content-Type': 'application/json'\n            },\n            method: 'POST'\n        }).then(response => response.json()).then(data => {\n            if (data.id) {\n                navigate(`/dapp/deployed/${txhash}`);\n            }\n        })\n    }\n\n    render() {\n        let { writeapi, askapi,todoFunctionAbi,transferJson } = this.state;\n        const { classes } = this.props;\n        var contractview = ''\n       \n       if(todoFunctionAbi.inputs){\n            contractview = todoFunctionAbi['inputs'].map((data, index) => {\n                const { name } = data;\n                    return (\n                        <Grid key={index}   item xs={12}>\n                                <TextField\n                                    required\n                                    id=\"address1\"\n                                    name={name}\n                                    label={transInput(transferJson,todoFunctionAbi.name, name)}\n                                    onChange={this.SetInput.bind(this,name)}\n                                    fullWidth\n                                    autoComplete=\"billing address-line1\"\n                                />\n                        </Grid>\n                    );\n            }); \n       }\n        \n        return (\n            <div className={classes.root}>\n            {/* <CssBaseline /> */}\n            <Drawer\n              className={classes.drawer}\n              variant=\"permanent\"\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n            >\n              <div className={classes.toolbar} />\n                <List>\n                    {askapi.map((data, index) => (\n                    <ListItem button key={index}>\n                        <ListItemText primary={transFunc(transferJson , data.name)} onClick={() => this.handleClickOpen(data)} />\n                    </ListItem>\n                    ))}\n\n                </List>\n                <Divider />\n                <List>\n                    {writeapi.map((data, index) => (\n                    <ListItem button key={index}>\n                        <ListItemText primary={transFunc(transferJson , data.name)} onClick={() => this.handleClickOpen(data)} />\n                    </ListItem>\n                    ))}\n                </List>\n            </Drawer>\n\n            <main className={classes.content}>\n              <div className={classes.toolbar} />\n              <Typography paragraph>\n                    <TransferCard />  \n              </Typography>\n            </main>\n                <Dialog\n                    className={classes.dialog} \n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                        <DialogTitle id=\"form-dialog-title\">方法名称:{transFunc(transferJson , todoFunctionAbi.name)} </DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>\n                                调用此方法将触发区块链钱包做签名，请慎重操作\n                            </DialogContentText>\n                            {contractview}\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color=\"primary\">\n                            Cancel\n                            </Button>\n                            <Button  onClick={() => this.delpoyContract()} color=\"primary\">\n                            submit\n                            </Button>\n                        </DialogActions>\n                </Dialog>\n                <Massage messageIsOpen={this.state.messageIsOpen} messageText={this.state.messageText}  setMessage = {isOpen => this.setMessage(isOpen)}/>\n          </div>\n        );\n    }\n}\n\nDappCreate.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(DappCreate);\n\n\n\n\n\n","import React, { Component } from 'react';\n\nimport { Router } from '@reach/router';\n\nimport DappCreate from '../view/dapp/create';\n\nimport MyDappList from '../view/dapp/MyDappList';\nimport DappManage from '../view/dapp/manage';\n\nimport MaLayout from '../components/MaLayout'\n\nconst ArticlePage = class DappPage extends Component {\n    render() { \n        return ( \n            <div>\n                <MaLayout>\n                    <div\n                        style={{\n                            margin: '0 auto',\n                            maxWidth: 960,\n                            padding: '0px 1.0875rem 1.45rem',\n                            paddingTop: 0,\n                        }}\n                    >\n                        <Router>\n                            <DappCreate path=\"/dapp/create/:name/\" />\n                          \n                            <DappManage path=\"/dapp/manage/:contractName/:contractAddress/\" />\n                      \n                            <MyDappList path=\"/dapp/:address/\" />\n                        </Router>\n                    </div>\n                </MaLayout>   \n            </div>  \n        ) \n    }\n};\n\nexport default ArticlePage","export const server_url = 'https://api.binstd.com';\n\n// export const server_url = 'http://127.0.0.1:3000';","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\n\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n};\n\nfunction ButtonAppBar(props) {\n  const { classes } = props;\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n            {/* <MenuIcon /> */}\n          </IconButton>\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n          <Button color=\"inherit\">首页</Button>\n          <Button color=\"inherit\">API</Button>\n          </Typography>\n          <Button color=\"inherit\">登陆</Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nButtonAppBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ButtonAppBar);\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n\nimport Mamenu from './Mamenu';\n\nconst theme = createMuiTheme({\n    palette: {\n      primary: {\n        light: '#2196f3',\n        main: '#2196f3',\n        dark: '#2196f3',\n        contrastText: '#fff',\n      },\n      secondary: {\n        light: '#ff7961',\n        main: '#f44336',\n        dark: '#ba000d',\n        contrastText: '#000',\n      },\n    },\n    typography: {\n        useNextVariants: true,\n    },\n    shadows: Array(25).fill('none')\n});\n\nconst MaLayout = ({ children }) => (\n    <React.Fragment>\n        <CssBaseline />\n        <MuiThemeProvider theme={theme}>\n            <Mamenu/>\n            {children}\n        </MuiThemeProvider>\n    </React.Fragment>\n)\n\nMaLayout.propTypes = {\n  children: PropTypes.node.isRequired\n}\n\nexport default MaLayout\n\n","var transFunc  = (jsonData, funcName) => {\n    if(jsonData[funcName]){\n        console.log('jsonData[name].value',jsonData[funcName].value);\n        return jsonData[funcName].value;\n    } else {\n        return funcName;\n    }\n}\n\nvar transInput  = (jsonData, funcName, inputName) => {\n    console.log(jsonData,funcName, inputName);\n    if(!jsonData[funcName]){\n        return inputName;\n    }\n    if(!jsonData[funcName].inputs) {\n        return inputName;\n    } else if (jsonData[funcName].inputs[inputName]) {\n        return jsonData[funcName].inputs[inputName];\n    } else {\n        return inputName;\n    }\n    \n    \n}\n\nexport {transFunc,transInput}"],"sourceRoot":""}