{"version":3,"sources":["webpack:///./src/view/dapp/MyDappList.js","webpack:///./src/components/card.js","webpack:///./src/components/Dapplist.js","webpack:///./src/components/Massage.js","webpack:///./src/components/TransferCard.js","webpack:///./src/view/dapp/manage.js","webpack:///./src/pages/dapp.js","webpack:///./src/lib/translate.js","webpack:///./src/view/dapp/create.js"],"names":["DappList","props","_this","_React$Component","call","this","state","dapplist","componentDidMount","_this2","fetch","server_url","address","then","res","json","result","console","log","setState","catch","e","render","classes","contractview","map","data","index","contractInfo","txHash","contractAddress","react_default","a","createElement","key","className","root","Paper_default","paper","Grid_default","container","spacing","item","ButtonBase_default","image","onClick","navigate","img","alt","src","xs","sm","direction","style","maxWidth","wordWrap","Typography_default","gutterBottom","variant","color","href","target","rel","minHeight","marginTop","React","Component","propTypes","PropTypes","object","isRequired","withStyles","theme","padding","unit","margin","height","maxwidth","maxheight","display","maxHeight","ComplexGrid","option","contractName","imgUrl","title","description","Button_default","size","button","flexGrow","width","FullWidthGrid","contract","componentWillMount","response","code","err","Gridview","card","boxShadow","textAlign","palette","text","secondary","MediaControlCard","setMessage","messageText","messageIsOpen","Snackbar_default","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","ContentProps","aria-describedby","message","id","action","IconButton_default","aria-label","close","Close_default","createData","name","calories","fat","carbs","protein","rows","TransferCard","Table_default","table","TableHead_default","TableRow_default","TableCell_default","numeric","TableBody_default","row","component","scope","DappCreate","handleClickOpen","inputs","length","eth","accounts","contractabi","at","toString","deploydata","_iterator","_isArray","Array","isArray","_i","Symbol","iterator","_ref","next","done","value","todoFunctionAbi","handleClose","isOpen","SetInput","event","delpoyContract","argument","Object","values","window","ethereum","enable","SimpleStore","apply","concat","from","error","delpoyContractt","abi","bytecode","gas","new","postDapp","txhash","postData","dappName","publicAddress","dappChain","body","JSON","stringify","headers","Content-Type","method","inputlist","askapi","writeapi","transferJson","_iterator2","_isArray2","_i2","_ref2","itemapi","type","constant","push","translate","_this3","_this$state","TextField_default","required","label","transInput","onChange","bind","fullWidth","autoComplete","Drawer_default","drawer","drawerPaper","toolbar","List_default","ListItem_default","ListItemText_default","primary","transFunc","Divider_default","content","paragraph","components_TransferCard","Dialog_default","dialog","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","DialogActions_default","Massage","flexDirection","alignItems","avatar","backgroundColor","main","form","submit","appBar","zIndex","flexShrink","mixins","minWidth","ArticlePage","_Component","DappPage","arguments","inheritsLoose_default","prototype","MaLayout","paddingTop","es","create","path","Dapplist","manage","MyDappList","Footer","__webpack_require__","d","__webpack_exports__","jsonData","funcName","inputName","userinfo","network","net_version","localStorage","getItem","parse","react__WEBPACK_IMPORTED_MODULE_7___default","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_13___default","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_15___default","_material_ui_core_Paper__WEBPACK_IMPORTED_MODULE_19___default","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_14___default","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_16___default"],"mappings":"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","file":"component---src-pages-dapp-js-9b9218188e3ba20afdad.js","sourcesContent":["import React from 'react';\nimport fetch from 'node-fetch';\nimport { server_url } from '../../lib/config';\n\n\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport ButtonBase from '@material-ui/core/ButtonBase';\n\n\nimport { navigate } from \"@reach/router\";\nconst styles = theme => ({\n\n    root: {\n        // flexGrow: 1,\n        marginTop:10\n      },\n      paper: {\n        padding: theme.spacing.unit * 2,\n        margin: 'auto',\n        maxWidth: 660,\n        height:140,\n      },\n      image: {\n        maxwidth: '80px',\n        maxheight: '80px',\n      },\n      img: {\n        margin: 'auto',\n        display: 'block',\n        maxWidth: '80px',\n        maxHeight: '80px',\n      },\n  \n});\n\nclass DappList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            dapplist: []\n        }\n    }\n\n    componentDidMount() {\n        fetch(`${server_url}/api/dapp/${this.props.address}?chain=eth_ropsten`).then(res => res.json()).then(result => {\n            console.log(result);\n            this.setState({\n                dapplist: result\n            });\n\n        }).catch(function (e) {\n            console.log(\"失败\");\n        });\n    }\n\n    render() {\n        const { dapplist } = this.state;\n        const { classes } = this.props;\n        const contractview = dapplist.map((data, index) => {\n            console.log(data);\n            const { contractInfo, txHash,contractAddress } = data;\n            return (\n                <div  key={index} className={classes.root}>\n                    <Paper className={classes.paper}>\n                        <Grid container spacing={24}>\n                            <Grid item>\n                                <ButtonBase className={classes.image}  onClick={() => navigate(`/dapp/manage/${contractInfo}/${contractAddress}`)} >\n                                    <img className={classes.img} alt=\"complex\" src=\"https://smartz.io/static/img/erc-20.png\" />\n                                </ButtonBase>\n                            </Grid>\n                            <Grid item xs={8} sm container>\n                                <Grid item xs container direction=\"column\" >\n                                    <Grid item xs style={{maxWidth:'500px',wordWrap: 'break-word'}} >\n                                        <Typography gutterBottom variant=\"subtitle1\">\n                                            {contractInfo}\n                                         </Typography>\n                                              合约地址:\n                                            <Typography color=\"textSecondary\"  >   \n                                                <a href=\"http://localhost:8000\" color=\"textSecondary\"  target=\"_blank\"  rel=\"noopener noreferrer\" >\n                                                {txHash} \n                                                </a>\n                                            </Typography>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                    \n                </div>\n             \n            );\n        });\n\n        return (\n            <div style={{ minHeight: '600px',marginTop:'80px' }} >\n                {contractview}\n            </div >\n        )\n    }\n}\n\nDappList.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(DappList);\n\n\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Button from '@material-ui/core/Button';\n\nimport { navigate } from \"@reach/router\";\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing.unit * 2,\n    margin: 'auto',\n    maxWidth: 600,\n    minHeight:180\n  },\n  image: {\n    width: 128,\n    height: 128,\n  },\n  img: {\n    margin: 'auto',\n    display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%',\n  },\n  button: {\n    margin: theme.spacing.unit,\n  },\n});\n\n\nfunction ComplexGrid(props) {\n  const { classes,option } = props;\n  console.log(option);\n  return (\n    <div className={classes.root}>\n\n      <Paper className={classes.paper}>\n     \n        <Grid container spacing={16}>\n          <Grid item>\n            <ButtonBase className={classes.image}  onClick={() => navigate(`/dapp/create/${option.contractName}`) } >\n              <img className={classes.img} alt=\"complex\" src={option.imgUrl} />\n            </ButtonBase>\n          </Grid>\n\n          <Grid item xs={12} sm container>\n            <Grid item xs container direction=\"column\" spacing={16}>\n              <Grid item xs>\n                <Typography gutterBottom variant=\"subtitle1\">\n                     {option.title}\n                </Typography>\n                <Typography gutterBottom >\n                    {option.description}\n                </Typography>\n         \n                <Button color=\"primary\" size=\"small\" className={classes.button}   onClick={() => navigate(`/dapp/create/${option.contractName}`) } >\n                    部  署\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n \n      </Paper>\n     \n    </div>\n  );\n}\n\nComplexGrid.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ComplexGrid);\n","// import React from 'react';\n// import PropTypes from 'prop-types';\n// import { withStyles } from '@material-ui/core/styles';\n\n// import Grid from '@material-ui/core/Grid';\n\n// import { server_url } from '../lib/config';\n// import fetch from 'node-fetch';\n// import Card from './card';\n// const styles = theme => ({\n//   root: {\n//     flexGrow: 1,\n//     boxShadow: 'none',\n//     padding:'30px',\n//     marginTop: '50px',\n    \n//   },\n//   paper: {\n//     padding: theme.spacing.unit * 2,\n//     textAlign: 'center',\n//     color: theme.palette.text.secondary,\n//   },\n// });\n\n\n// class FullWidthGrid extends React.Component{\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             contract: []\n//         }\n//     }\n    \n//     componentDidMount() {\n//         fetch(`${server_url}/api/chain/allcontractlist`).then(response => response.json())\n//             .then(result => {\n//                 if (result.code === 0) {\n//                     // console.log(result);\n//                     this.setState({\n//                         contract: result.data\n//                     });\n//                 }\n//             }).catch(err => {\n//                 console.log(err);\n//             });\n//     }\n\n//     render() {\n//        // let { contract } = this.state;\n//         const { classes } = this.props;\n\n//         const { contract } = this.state;\n//         // console.log(contract);\n//         const Gridview = contract.map((data, index) => {\n//             // const { title, description, contractName } = data;\n//             return (\n//                 <Grid  key={index} item xs={12} sm={6} >\n//                     <Card option={data} />\n//                 </Grid>\n          \n//             );\n\n//         });\n//         //console.log(classes.root);\n//         return (\n//             <div className={classes.root} >\n//                 <Grid container spacing={24}>\n//                    {Gridview}\n//                 </Grid>\n//             </div>\n//         );\n//     }\n// }\n\n\n// FullWidthGrid.propTypes = {\n//   classes: PropTypes.object.isRequired,\n// };\n\n// export default withStyles(styles)(FullWidthGrid);\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport fetch from 'node-fetch';\nimport { server_url } from '../lib/config';\nimport { navigate } from \"@reach/router\";\n\nimport Card from './card';\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    boxShadow: 'none',\n    padding:'30px',\n    marginTop:'50px'\n  },\n  paper: {\n    padding: theme.spacing.unit * 2,\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n});\n\n\nclass FullWidthGrid extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            contract: []\n        }\n    }\n    componentWillMount() {\n        fetch(`${server_url}/api/chain/allcontractlist`).then(response => response.json())\n            .then(result => {\n                if (result.code == 0) {\n                    // console.log(result);\n                    this.setState({\n                        contract: result.data\n                    });\n                }\n            }).catch(err => {\n                console.log(err);\n            });\n    }\n\n    render() {\n       // let { contract } = this.state;\n        const { classes } = this.props;\n\n        const { contract } = this.state;\n        // console.log(contract);\n        const Gridview = contract.map((data, index) => {\n            const { title, description, contractName } = data;\n            return (\n                <Grid  key={index} item xs={12} sm={6} >\n                    <Card option={data} />\n                </Grid>\n          \n            );\n\n        });\n        //console.log(classes.root);\n        return (\n            <div className={classes.root} >\n                <Grid container spacing={24}>\n                   {Gridview}\n                </Grid>\n            </div>\n        );\n    }\n}\n\n\n\nFullWidthGrid.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(FullWidthGrid);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst styles = theme => ({\n  close: {\n    padding: theme.spacing.unit / 2,\n  },\n});\n\n// class SimpleSnackbar extends React.Component {\n \n//     constructor(props) {\n//         super(props);\n//     }\n//     render() {\n//     const { classes } = this.props;\n//     return (\n//       <div>\n//         <Snackbar\n//           anchorOrigin={{\n//             vertical: 'bottom',\n//             horizontal: 'center',\n//           }}\n//           open={this.props.messageIsOpen}\n//           autoHideDuration={6000}\n//           onClose={() => this.props.setMessage(false)}\n//           ContentProps={{\n//             'aria-describedby': 'message-id',\n//           }}\n//           message={<span id=\"message-id\">{this.props.messageText}</span>}\n//           action={[\n//             <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={() => this.props.setMessage(false)}>\n//               已读\n//             </Button>,\n//             <IconButton\n//               key=\"close\"\n//               aria-label=\"Close\"\n//               color=\"inherit\"\n//               className={classes.close}\n//             //   onClick={this.handleClose}\n//               onClick={() => this.props.setMessage(false)}\n//             >\n//               <CloseIcon />\n//             </IconButton>,\n//           ]}\n//         />\n//       </div>\n//     );\n//   }\n// }\n\n// SimpleSnackbar.propTypes = {\n//   classes: PropTypes.object.isRequired,\n// };\n\n// export default withStyles(styles)(SimpleSnackbar);\n\n\nfunction MediaControlCard(props) {\n  const { classes, setMessage, messageText, messageIsOpen } = props;\n\n  return (\n    <div>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n          }}\n          open={messageIsOpen}\n          autoHideDuration={6000}\n          onClose={() => setMessage(false)}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">{messageText}</span>}\n          action={[\n            <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={() =>  setMessage(false)}>\n              已读\n            </Button>,\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"inherit\"\n              className={classes.close}\n              onClick={() => setMessage(false)}\n            >\n              <CloseIcon />\n            </IconButton>,\n          ]}\n        />\n      </div>\n  );\n}\n\nMediaControlCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(MediaControlCard);\n","import React from 'react';\nimport fetch from 'node-fetch';\nimport { server_url } from '../lib/config';\n\n\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst styles = theme => ({\n    \n    root: {\n        // flexGrow: 1,\n        marginTop: 10\n    },\n    paper: {\n        padding: theme.spacing.unit * 2,\n        margin: 'auto',\n        maxWidth: 600,\n        // height: 140,\n    },\n    image: {\n        width: '100px',\n        height: '100px',\n    },\n    img: {\n        margin: 'auto',\n        display: 'block',\n        maxWidth: '80px',\n        maxHeight: '80px',\n    },\n    table: {\n        width: \"90%\",\n        margin:'5px auto'\n    },\n\n});\n\nlet id = 0;\nfunction createData(name, calories, fat, carbs, protein) {\n    id += 1;\n    return { id, name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    // createData('Eclair', 262, 16.0, 24, 6.0),\n    // createData('Cupcake', 305, 3.7, 67, 4.3),\n    // createData('Gingerbread', 356, 16.0, 49, 3.9),\n];\n\nclass TransferCard extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            dapplist: []\n        }\n    }\n\n    componentDidMount() {\n        fetch(`${server_url}/api/dapp/${this.props.address}?chain=eth_ropsten`).then(res => res.json()).then(result => {\n            console.log(result);\n            this.setState({\n                dapplist: result\n            });\n            // let deploydata = {};\n        }).catch(function (e) {\n            console.log(\"失败\");\n        });\n    }\n\n    render() {\n        // const { dapplist } = this.state;\n        const { classes } = this.props;\n        // const contractview = dapplist.map((data, index) => {\n        //     console.log(data);\n        //     const { contractInfo, txHash, contractAddress } = data;\n        //     return (\n        //         <div key={index} className={classes.root}>\n        //             <Paper className={classes.paper}>\n        //                 <Grid container spacing={24}>\n        //                     <Grid item>\n        //                         <ButtonBase className={classes.image} onClick={() => navigate(`/dapp/manage/${contractInfo}/${contractAddress}`)} >\n        //                             <img className={classes.img} alt=\"complex\" src=\"https://smartz.io/static/img/erc-20.png\" />\n        //                         </ButtonBase>\n        //                     </Grid>\n        //                     <Grid item xs={8} sm container>\n        //                         <Grid item xs container direction=\"column\" >\n        //                             <Grid item xs style={{ maxWidth: '400px' }} >\n        //                                 <Typography gutterBottom variant=\"subtitle1\">\n        //                                     {contractInfo}\n        //                                 </Typography>\n        //                                 合约地址:\n        //                                     <Typography color=\"textSecondary\"  >\n        //                                     <a href=\"http://localhost:8000\" color=\"textSecondary\" target=\"_blank\" >\n        //                                         {txHash}\n        //                                     </a>\n        //                                 </Typography>\n        //                             </Grid>\n        //                         </Grid>\n        //                     </Grid>\n        //                 </Grid>\n        //             </Paper>\n\n        //         </div>\n\n        //     );\n        // });\n\n        return (\n            <div style={{ minHeight: '600px', marginTop: '10px' }} >\n                <div className={classes.root}>\n                    <Paper className={classes.paper}>\n                        <Grid container spacing={24}>\n                           \n                            <Grid item xs={8} sm container>\n                                <Grid item xs container direction=\"column\" >\n                                    <Grid item xs style={{ maxWidth: '400px' }} >\n                                        <Typography gutterBottom variant=\"subtitle1\">\n                                            我是合约11\n                                         </Typography>\n                                            合约地址:\n    \n                                            <Typography color=\"textSecondary\">\n                                                <a href=\"http://localhost:8000\"  color=\"textSecondary\" target=\"_blank\"  rel=\"noopener noreferrer\" >\n                                                    luz243434343\n                                                </a>\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </div>\n\n                <div className={classes.root}>\n                    <Paper className={classes.paper}>\n                        <Grid container spacing={24}>\n                          \n                            <Grid item xs={8} sm container>\n                                <Grid item xs container direction=\"column\" >\n                                    <Grid item xs style={{}} >\n                                        <Typography gutterBottom variant=\"subtitle1\">\n                                            方法名称: 转账\n                                         </Typography>\n                                                hashhashhashhashhashhashhashhash\n                                            {/* <Typography color=\"textSecondary\"  > */}\n                                                输入:\n                                                <Table className={classes.table}>\n                                                    <TableHead>\n                                                        <TableRow>\n                                                            <TableCell>参数名</TableCell>\n                                                            <TableCell numeric>值</TableCell>\n                                                            \n                                                        </TableRow>\n                                                    </TableHead>\n                                                    <TableBody>\n                                                        {rows.map(row => {\n                                                            return (\n                                                                <TableRow key={row.id}>\n                                                                    <TableCell component=\"th\" scope=\"row\">\n                                                                        {row.name}\n                                                                    </TableCell>\n                                                                    <TableCell numeric>{row.calories}</TableCell>\n                                                                </TableRow>\n                                                            );\n                                                        })}\n                                                    </TableBody>\n                                                </Table>\n                                           {/* </Typography> */}\n                                            {/* <Typography color=\"textSecondary\"  style={{marginTop:'30px'}}> */}\n                                               结果:\n                                                <Table className={classes.table}>\n                                                    <TableHead>\n                                                        <TableRow>\n                                                            <TableCell>参数名</TableCell>\n                                                            <TableCell numeric>值</TableCell>\n                                                            \n                                                        </TableRow>\n                                                    </TableHead>\n                                                    <TableBody>\n                                                        {rows.map(row => {\n                                                            return (\n                                                                <TableRow key={row.id}>\n                                                                    <TableCell component=\"th\" scope=\"row\">\n                                                                        {row.name}\n                                                                    </TableCell>\n                                                                    <TableCell numeric>{row.calories}</TableCell>\n                                                                </TableRow>\n                                                            );\n                                                        })}\n                                                    </TableBody>\n                                                </Table>\n                                           {/* </Typography> */}\n\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </div>\n\n            </div >\n        )\n    }\n}\n\nTransferCard.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(TransferCard);\n\n\n\n\n\n","import React from 'react'\nimport { server_url } from '../../lib/config';\nimport { transFunc,transInput } from '../../lib/translate';\nimport fetch from 'node-fetch';\nimport { navigate } from \"@reach/router\";\n//import { web3 } from '../../lib/eth';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\n\nimport Button from '@material-ui/core/Button';\n\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\n\nimport Drawer from '@material-ui/core/Drawer';\n\nimport List from '@material-ui/core/List';\n// import Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\n\nimport ListItemText from '@material-ui/core/ListItemText';\n\n// import Mamenu from '../../components/Mamenu';\nimport Massage from '../../components/Massage';\n\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TransferCard from '../../components/TransferCard';\n\nimport { eth } from '../../lib/eth';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n    paper: {\n        maxWidth: '550px',\n        margin: 'auto',\n        marginTop: theme.spacing.unit * 12,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: `${theme.spacing.unit * 5}px ${theme.spacing.unit * 5}px ${theme.spacing.unit * 3}px`,\n    },\n    avatar: {\n        margin: theme.spacing.unit,\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing.unit,\n    },\n    submit: {\n        marginTop: theme.spacing.unit * 3,\n    },\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing.unit * 3,\n    },\n    toolbar: theme.mixins.toolbar,\n    dialog:{\n        minWidth:'600px',\n        margin:'auto'\n    }\n});\n\n\nclass DappCreate extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false, //弹出输入开发\n            messageIsOpen:false, //弹出消息开关\n            messageText:'', //弹出消息开关\n            contractabi: [], //全部abi\n            inputlist: [],\n            deploydata: {},\n            askapi:[],\n            writeapi:[],\n            todoFunctionAbi:{}, //要执行的方法abi\n            transferJson:{}\n        }\n    }\n\n    handleClickOpen = (data) => {\n        // console.log('32323:',data);\n        if(data.inputs.length === 0) {\n            console.log(data);\n            \n            //alert(data.name);\n            eth.accounts().then((accounts) => {\n                const SimpleStore = eth.contract(this.state.contractabi).at(this.props.contractAddress);    \n                 // use a method that comes with the contract\n                SimpleStore[data.name]().then((txHash) => {\n                    let messageText = '';\n                    console.log('typeof txHash => \\n',typeof txHash[0]);\n                    if(typeof txHash[0] === 'object'){\n                        //console.log(txHash[0].toString());\n                        messageText = txHash[0].toString();\n                    }else {\n                        messageText = txHash[0];\n                    }\n                    \n                    this.setMessage(true,messageText)\n              });\n            \n            });\n        } else {\n            console.log(data);\n\n            let deploydata = {};\n            \n            if(data.inputs){\n                for (let item of data.inputs) {\n                    deploydata[item.name] = '';\n                }\n            }    \n            \n            this.setState({\n                todoFunctionAbi:data,\n                open: true, \n                deploydata\n            });\n            \n        }\n        //this.setState({ open: true });\n    }\n    \n    //\n    handleClose = () => {\n        this.setState({ open: false });\n    }\n\n    //\n    setMessage = (isOpen, messageText) => {\n        console.log(isOpen,typeof messageText);\n        // messageText\n        if(isOpen){\n            this.setState({\n                messageIsOpen:isOpen,\n                messageText\n            });\n        } else {\n            this.setState({\n                messageIsOpen:isOpen\n            });\n        }\n    }\n\n    componentDidMount() {\n        console.log(this.props.contractName);\n        console.log(this.props.contractAddress);\n        fetch(`${server_url}/api/chain/abi?apiname=${this.props.contractName}`).then(res => res.json()).then(result => {\n            // console.log(data);\n            console.log(result.data);\n            // let deploydata = {};\n            if (result.code === 0) {\n                let askapi = [];\n                let writeapi = [];\n                //console.log(result);\n                for (let itemapi of result.data.abi) {\n                    //console.log(itemapi);\n                    if (itemapi.type === 'function') {\n                        if(itemapi.constant === true) {\n                            askapi.push(itemapi);\n                        }else {\n                            writeapi.push(itemapi);\n                        }\n                    }\n                }\n         \n               console.log(writeapi);    \n               console.log(askapi);   \n                this.setState({\n                    writeapi,\n                    askapi,\n                    contractabi:result.data.abi,\n                    transferJson:result.data.translate\n                });\n            }\n        }).catch(function (e) {\n            console.log(\"失败\");\n        });\n\n    }\n\n    SetInput = (name, event) => {\n        let deploydata = this.state.deploydata;\n        deploydata[name] = event.target.value;\n        this.setState({\n            deploydata\n        });\n\n    }\n\n    delpoyContract = () => {\n        console.log('this.state.deploydata:',this.state.deploydata);\n        const todoFunctionAbi = this.state.todoFunctionAbi;\n        let argument = Object.values(this.state.deploydata)\n        // var myContract = new web3.eth.Contract(this.state.contract.abi);\n        window.ethereum.enable().then( (accounts) => {\n            console.log(accounts);\n        })\n\n        this.handleClose();\n        eth.accounts().then((accounts) => {\n             \n            const SimpleStore = eth.contract(this.state.contractabi).at(this.props.contractAddress);    \n       \n            SimpleStore[todoFunctionAbi.name](...argument,{from:accounts[0]},(error, result) => {\n         \n                if(!error){\n                    console.log('result:',result);\n                    // this.postDapp(result);\n                    let messageText = '';\n                    console.log('typeof txHash => \\n',typeof result[0]);\n                    if(typeof result[0] === 'object'){\n                        //console.log(txHash[0].toString());\n                        messageText = result[0].toString();\n                    }else {\n                        messageText = result[0];\n                    }\n                    \n                    this.setMessage(true,messageText)\n\n                } else {\n                    console.log('error:',error);\n                }\n        \n            });\n            \n        });\n    }\n\n    delpoyContractt = () => {\n        let argument = Object.values(this.state.deploydata)\n        // var myContract = new web3.eth.Contract(this.state.contract.abi);\n        window.ethereum.enable().then( (accounts) => {\n            console.log(accounts);\n        })\n\n       console.log(this.state.deploydata);\n        eth.accounts().then((accounts) => {\n            const SimpleStore = eth.contract(this.state.contract.abi, this.state.contract.bytecode, {\n              from: accounts[0],\n              gas: 4000000,\n            });\n          \n            // create a new contract\n            SimpleStore.new(...argument,(error, result) => {\n\n                if(!error){\n                    this.postDapp(result);\n                }\n            });\n        });\n  \n\n    }\n\n    postDapp = (txhash) => {\n        \n        let postData = {\n            dappName: '',\n            txHash: txhash,\n            contractInfo: this.props.name,\n            publicAddress: '0x81D723361d4F3e648F2c9c479d88DC6dEBF4fA5f',\n            dappChain: 'kovan'\n        }\n\n        fetch(`${server_url}/api/dapp`, {\n            body: JSON.stringify(postData),\n            headers: {\n                // Authorization: `Bearer ${auth}`,\n                'Content-Type': 'application/json'\n            },\n            method: 'POST'\n        }).then(response => response.json()).then(data => {\n            if (data.id) {\n                navigate(`/dapp/deployed/${txhash}`);\n            }\n        })\n    }\n\n    render() {\n        let { writeapi, askapi,todoFunctionAbi,transferJson } = this.state;\n        const { classes } = this.props;\n        var contractview = ''\n       \n       if(todoFunctionAbi.inputs){\n            contractview = todoFunctionAbi['inputs'].map((data, index) => {\n                const { name } = data;\n                    return (\n                        <Grid key={index}   item xs={12}>\n                                <TextField\n                                    required\n                                    id=\"address1\"\n                                    name={name}\n                                    label={transInput(transferJson,todoFunctionAbi.name, name)}\n                                    onChange={this.SetInput.bind(this,name)}\n                                    fullWidth\n                                    autoComplete=\"billing address-line1\"\n                                />\n                        </Grid>\n                    );\n            }); \n       }\n        \n        return (\n            <div className={classes.root}>\n            {/* <CssBaseline /> */}\n            <Drawer\n              className={classes.drawer}\n              variant=\"permanent\"\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n            >\n              <div className={classes.toolbar} />\n                <List>\n                    {askapi.map((data, index) => (\n                    <ListItem button key={index}>\n                        <ListItemText primary={transFunc(transferJson , data.name)} onClick={() => this.handleClickOpen(data)} />\n                    </ListItem>\n                    ))}\n\n                </List>\n                <Divider />\n                <List>\n                    {writeapi.map((data, index) => (\n                    <ListItem button key={index}>\n                        <ListItemText primary={transFunc(transferJson , data.name)} onClick={() => this.handleClickOpen(data)} />\n                    </ListItem>\n                    ))}\n                </List>\n            </Drawer>\n\n            <main className={classes.content}>\n              <div className={classes.toolbar} />\n              <Typography paragraph>\n                    <TransferCard />  \n              </Typography>\n            </main>\n                <Dialog\n                    className={classes.dialog} \n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                        <DialogTitle id=\"form-dialog-title\">方法名称:{transFunc(transferJson , todoFunctionAbi.name)} </DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>\n                                调用此方法将触发区块链钱包做签名，请慎重操作\n                            </DialogContentText>\n                            {contractview}\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color=\"primary\">\n                            Cancel\n                            </Button>\n                            <Button  onClick={() => this.delpoyContract()} color=\"primary\">\n                            submit\n                            </Button>\n                        </DialogActions>\n                </Dialog>\n                <Massage messageIsOpen={this.state.messageIsOpen} messageText={this.state.messageText}  setMessage = {isOpen => this.setMessage(isOpen)}/>\n          </div>\n        );\n    }\n}\n\nDappCreate.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(DappCreate);\n\n\n\n\n\n","import React, { Component } from 'react';\n\nimport { Router } from '@reach/router';\n\nimport DappCreate from '../view/dapp/create';\n\nimport MyDappList from '../view/dapp/MyDappList';\nimport Dapplist from '../components/Dapplist'\n\nimport DappManage from '../view/dapp/manage';\n\nimport MaLayout from '../components/MaLayout'\nimport Footer from '../components/Footer';\nconst ArticlePage = class DappPage extends Component {\n    render() { \n        return ( \n            <div>\n                <MaLayout>\n                    <div\n                        style={{\n                            margin: '0 auto',\n                            // maxWidth: 60,\n                            padding: '0px 1.0875rem 1.45rem',\n                            paddingTop: 0,\n                        }}\n                    >\n                        <Router>\n                            <DappCreate path=\"/dapp/create/:name/\" />\n                            <Dapplist  path=\"/dapp/index/\"/>  \n                            <DappManage path=\"/dapp/manage/:contractName/:contractAddress/\" />\n                      \n                            <MyDappList path=\"/dapp/:address/\" />\n                        </Router>\n                    \n                    </div>\n                    <Footer /> \n                </MaLayout>   \n            </div>  \n        ) \n    }\n};\n\nexport default ArticlePage","var transFunc  = (jsonData, funcName) => {\n    if(jsonData[funcName]){\n        console.log('jsonData[name].value',jsonData[funcName].value);\n        return jsonData[funcName].value;\n    } else {\n        return funcName;\n    }\n}\n\nvar transInput  = (jsonData, funcName, inputName) => {\n    console.log(jsonData,funcName, inputName);\n    if(!jsonData[funcName]){\n        return inputName;\n    }\n    if(!jsonData[funcName].inputs) {\n        return inputName;\n    } else if (jsonData[funcName].inputs[inputName]) {\n        return jsonData[funcName].inputs[inputName];\n    } else {\n        return inputName;\n    }\n    \n    \n}\n\nexport {transFunc,transInput}","import React from 'react'\nimport { server_url } from '../../lib/config';\nimport fetch from 'node-fetch';\nimport { navigate } from \"@reach/router\";\nimport { eth } from '../../lib/eth';\nimport { transInput } from '../../lib/translate';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\n\nimport Button from '@material-ui/core/Button';\n\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport Paper from '@material-ui/core/Paper';\n\nconst styles = theme => ({\n\n    paper: {\n        maxWidth: '550px',\n        margin: 'auto',\n        marginTop: theme.spacing.unit * 12,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: `${theme.spacing.unit * 5}px ${theme.spacing.unit * 5}px ${theme.spacing.unit * 3}px`,\n    },\n    avatar: {\n        margin: theme.spacing.unit,\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing.unit,\n    },\n    submit: {\n        marginTop: theme.spacing.unit * 3,\n    },\n});\n\nclass DappCreate extends React.Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            contract: {},\n            inputlist: [],\n            deploydata: {},\n            userinfo: {},\n            network:'',\n            transferJson:{}\n\n        }\n    }\n\n    componentDidMount() {\n        var network = '';\n       // console.log('1111');\n        eth.net_version().then((result) => {\n            switch (result) {\n                case \"1\":\n                    console.log('This is mainnet')\n                    network = 'eth_main'\n                    break\n                case \"2\":\n                    console.log('This is the deprecated Morden test network.')\n                    network = 'eth_morden'\n                    break\n                case \"3\":\n                    console.log('This is the ropsten test network.')\n                    network = 'eth_ropsten'\n                    break\n                case \"4\":\n                    console.log('This is the Rinkeby test network.')\n                    network = 'eth_rinkeby'\n                    break\n                case \"42\":\n                    console.log('This is the Kovan test network.')\n                    network = 'eth_kovan'\n                    break\n                default:\n                    console.log('This is an unknown network.')\n                    network = 'eth_unknown'\n            }\n            this.setState({\n                network\n            });\n        })\n\n        if (localStorage.getItem(\"userinfo\")) {\n            let userinfo = JSON.parse(localStorage.getItem(\"userinfo\"));\n             this.setState({\n                userinfo\n             });\n        }\n        fetch(`${server_url}/api/chain/abi?apiname=${this.props.name}`).then(res => res.json()).then(result => {\n            // console.log(data);\n            // console.log(result.data);\n            let deploydata = {};\n            if (result.code === 0) {\n                let inputlist = [];\n                //console.log(result);\n                for (let itemapi of result.data.abi) {\n                    if (itemapi.type === 'constructor') {\n                        inputlist = itemapi.inputs;\n                    }\n                }\n                for (let data of inputlist) {\n                    deploydata[data.name] = '';\n                }\n                this.setState({\n                    contract: result.data,\n                    transferJson:result.data.translate,\n                    inputlist,\n                    deploydata\n                });\n            }\n        }).catch(function (e) {\n            console.log(\"失败\");\n        });\n       \n    }\n\n    SetInput = (name, event) => {\n        //console.log(event.target.value);\n       // console.log(name);\n        let deploydata = this.state.deploydata;\n        deploydata[name] = event.target.value;\n        this.setState({\n            deploydata\n        });\n\n    }\n\n    delpoyContract = () => {\n        let argument = Object.values(this.state.deploydata)\n        // var myContract = new web3.eth.Contract(this.state.contract.abi);\n        window.ethereum.enable().then( (accounts) => {\n            console.log(accounts);\n        })\n\n       console.log(this.state.deploydata);\n        eth.accounts().then((accounts) => {\n            const SimpleStore = eth.contract(this.state.contract.abi, this.state.contract.bytecode, {\n              from: accounts[0],\n              gas: 4000000,\n            });\n          \n            // create a new contract\n            SimpleStore.new(...argument,(error, result) => {\n                //console.log('error:',error);\n                if(!error){\n                    this.postDapp(result);\n                }\n            });\n        });\n  \n    }\n\n\n    postDapp = (txhash) => {\n        \n        let postData = {\n            dappName: '',\n            txHash: txhash,\n            contractInfo: this.props.name,\n            publicAddress: this.state.userinfo.address,\n            dappChain: this.state.network //不应该写死\n        }\n        console.log(postData);\n        fetch(`${server_url}/api/dapp`, {\n            body: JSON.stringify(postData),\n            headers: {\n                // Authorization: `Bearer ${auth}`,\n                'Content-Type': 'application/json'\n            },\n            method: 'POST'\n        }).then(response => response.json()).then(data => {\n            if (data.id) {\n                // navigateTo('/dapp/index')\n                navigate(`/dapp/deployed/${txhash}`);\n            }\n        })\n    }\n\n    render() {\n        let { inputlist,transferJson } = this.state;\n        const { classes } = this.props;\n       // console.log(inputlist);\n        const contractview = inputlist.map((data, index) => {\n            const { name } = data;\n                return (\n                    <Grid key={index}   item xs={12}>\n                        <TextField\n                            required\n                            id=\"address1\"\n                            name={name}\n                            // label={name}\n                            label={transInput(transferJson,'constructor', name)}\n                            onChange={this.SetInput.bind(this,name)}\n                            fullWidth\n                            autoComplete=\"billing address-line1\"\n                        />\n                    </Grid>\n                );\n        });   \n        return (\n            <div style={{ minHeight: '600px' }}>\n                <Paper className={classes.paper}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        合约部署\n                    </Typography>\n                    <Grid container spacing={24}>\n                        {contractview}\n                    </Grid>\n\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={() => this.delpoyContract()}\n                    >\n                        确认\n                    </Button>\n                </Paper>\n            </div>\n        );\n    }\n}\n\nDappCreate.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(DappCreate);\n\n\n\n"],"sourceRoot":""}